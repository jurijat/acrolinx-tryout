{
    "swagger": "2.0",
    "info": {
        "title": "Acrolinx API",
        "version": "",
        "description": "The REST-like Acrolinx API helps you:\n\n* Configure settings on your Acrolinx instance\n\n* Retrieve information from your Acrolinx instance\n\n* Build Acrolinx checking features into your content creation workflows.\n\n## Acrolinx SDKs\n\nConsider using [Acrolinx SDKs](https://github.com/acrolinx?q=sdk).\n\n# Authentication and Authorization\n\nTo interact with Acrolinx, you must use authorized and authenticated. This requires an **access token**.\n\nAn **access token** is an encoded and cryptographically signed string. It has the following characteristics:\n\n* It's associated with a user\n\n* A user can have an infinite number of access tokens\n\n* It has a certain lifetime (30 days default) that you can change\n\n* It expires after the lifetime or when the password of the associated user is changed\n\n* It provides authorization and authentication\n\nGet an **access token**\nTo get an access token, sign in to Acrolinx.\n\n**Note:** To learn more about creating API tokens, read [Create an API Token](https://support.acrolinx.com/hc/en-us/articles/10306041244818-Create-an-API-Token) in the Acrolinx documentation.\n\nSee also [Create an API token](#Create an API token (Self)).\n\nUse an access token:\n\nEvery request you send to the Acrolinx API must contain a [header](#header-access-token) that includes an access token:\n\n```\n    X-Acrolinx-Auth: WERTZUIOP\n```\n\n## API token\n\nAn API token is an access token with special characteristics:\n\n* It has a lifetime of 4 years\n\n* It does **not expire when the password of the associated user is changed**\n\n* A user can have only one API token associated with it at a time\n\nTo get an API token:\n\n* Go to your Settings and create one.\n\n* Use the **user API** programmatically. (See more under the section **User-generated API tokens**)\n\nBesides that, the **API token** works like an **access token**.\n\n# General headers\n\n## Access token\n\nAll methods except \"index\" and \"poll access token\" require a valid access token in the `X-Acrolinx-Auth` header.\nIf the token is invalid, Acrolinx returns a `401` response. (see `401` response of \"index\").\n\nExample:\n\n```\n    X-Acrolinx-Auth: 123579080a8d1fee12490a90dc3\n```\n\n## Base URL\n\nTo support reverse proxies, an integration may provide the `X-Acrolinx-Base-Url` header with each request. If the response body contains links to the API, \nAcrolinx will prefix them with the specified value. The value must be an absolute URL including scheme and host.\nMalformed values will result in a `400` status code.\n\nExample:\n\n```\n    X-Acrolinx-Base-Url: https://example.com/path/\n```\n\n## Integration locale\n\nAll methods accept a header `X-Acrolinx-Client-Locale` that the integration can use to identify its own locale (for example, UI language).\nFor the value of the header field, use a single language tag that complies with [BCP 47](https://www.ietf.org/rfc/bcp/bcp47.txt). Acrolinx will try to return message strings\nand other locale-specific parts of the response in the requested language.\n\nExample:\n\n```\n    X-Acrolinx-Client-Locale: de-CH\n```\n\nAcrolinx tries to match to the nearest configured locale that it support, for example, `de`.\nThe \"index\" request returns a list of supported locales. Acrolinx falls back to the default `en` locale under the following conditions:\n\n* No X-Acrolinx-Client-Locale header is sent\n\n* There's no matching supported locale\n\n* For the given response, there's no appropriate localization available\n\n## Signature\n\nIf not otherwise documented, all methods require you to set a header `X-Acrolinx-Client`. The header needs to include a valid signature. \nIf the header is missing or if the signature is invalid, the request returns an error.\n\nThe format of the signature is `Signature;Version`, where `Signature` is the signature as configured in the Acrolinx license and\n`Version` is the version number of the integration.\n\nExample:\n\n```\n    X-Acrolinx-Client: SW50ZWdyYXRpb25EZXZlbG9wbWVudERlbW9Pbmx5; 1.0.1.45\n```\n\n# Response format\n\nThe API provides a consistent format for all responses. Each response has a `links` field and one of the three fields: `error`, `progress`, or `data`.\n\nThe `links` field contains further URLs that you can use as a next step in the workflow.\n\n* `error` is set if the request didn't succeed. This includes an HTTP status code greater or equal to 4xx.\n\n* `progress` means that the processing isn't done yet and the integration has to poll for the final result.\n\n* `data` contains the actual result data. The processing finished successfully.\n\n## Error responses\n\n### General format\n\nThe API provides a consistent format for errors, which is based on [RFC7807](https://datatracker.ietf.org/doc/rfc7807/?include_text=1).\nThe format is JSON and the API guarantees to send the fields `type`, `title`, `detail`, and `status` with each error response.\n\nExample:\n\n```\nHTTP/1.1 403 Forbidden\nContent-Type: application/problem+json\n{\n  \"error\": {\n    \"type\": \"auth\",\n    \"title\": \"Invalid authentication\",\n    \"detail\": \"The provided token for authorization is not valid.\",\n    \"status\": 403\n  }\n  \"links\": {}\n}\n```\n\n* `type` is a unique identifier for the type of error. Choose a workflow for error handling that works best for the type of integration (interactive or automated).\n\n* `title` is a short description of the error. You can use this as the title of the error message that users see.\n\n* `detail` is a longer description of the error. You can also include this in the error message.\n\n* `status` is redundant to the HTTP status code. It may be helpful if a proxy changes the HTTP status code of the original API response.\n\n* You might also see an optional `reference` field with an ID.\n\nDepending on `type`, the response may include additional fields to provide more detailed information.\n\nWe may add additional fields in the future. An integration must not break because of unexpected fields.\n\n### Error types\n\nType | Description| What to do\n-----|------------|------------\n`client` | Unspecific error caused by the integration's request. | Check logs and configuration or the integration code.\n`server` | Unspecific Acrolinx error during processing of a request. | Check logs and configuration.\n`clientSignatureMissing` | The `X-Acrolinx-Client` header was missing.  | [Contact Acrolinx](https://support.acrolinx.com/hc/en-us/requests/new) to learn how to get a valid signature.\n`clientSignatureRejected` | The signature included in the `X-Acrolinx-Client` header was invalid. | [Contact Acrolinx](https://support.acrolinx.com/hc/en-us/requests/new) to get a valid signature.\n`sso` | Returned for any single sign-on errors. | This is likely a configuration issue.\n`auth` | Invalid authentication. | Use another access token.\n`insufficientPrivileges` | Insufficient privileges. | Assign the required privileges to the user.\n`interactiveSignInTimedOut` | The interactive sign-in process timed out. | Sign in again.\n`checkCancelled` | The check was canceled. No result is available. | Probably points to an error in the integration.\n`checkFailed` | The check failed. | Check logs and configuration.\n`invalidBaseUrl` | The request contained an invalid base URL in the `X-Acrolinx-Base-URL` header. | Check the configuration of integration or proxies, which set the header.\n`customFieldsIncorrect` | Custom field values are incorrect. | Provide valid values for all required custom fields before or when checking a document.\n`validation` | Invalid request attributes. | Check the request for invalid values or missing parameters.\n`guidanceProfileDoesntExist` | Style guide doesn't exist. | The style guide doesn't exist or isn't available for the user ID and language provided.\n`noGuidanceProfileConfigured` | No style guide configured. | No style guide is configured for the user ID and language provided.\n`contentTooLarge` | File too large. | Try checking less content.\n`queueLimitExceeded` | Queue limit exceeded. | Wait at least as long as suggested in the retry-after header and try another check.\n`conflict` | Concurrent write access. | Conflict with a concurrent write access. Try again with fresh data.\n`licenseLimitExceeded` | License limit exceeded. | You exceeded a limit set by the terms of your license. The error description contains more details. For more information, check [the documentation](https://support.acrolinx.com/hc/en-us/articles/10306079192082-License-Types).\n`entityToAssociateNotFound` | One or more associates to an entity could not be found. | Make sure that the given associates actually exist.\n\n### Additional information on validation errors\n\nErrors with type `validation` come with a list of constraint violation descriptions in an additional property `validationDetails`:\n\n```\n{\n    \"title\": \"Validation error\",\n    \"constraint\": \"The 'languageId' is required.\",\n    \"attributePath\": \"submit.arg1.languageId\",\n    \"detail\": \"The 'languageId' is required but was 'null'.\",\n    \"invalidValue\": \"DictionaryEntry{surface='TestSurface', scope=language, languageId='', guidanceProfileId='null', documentId='null'}\",\n    \"possibleValues\": [\"en\", \"de\"]\n}\n\n```\n\n* `title`: \"Validation error\"\n\n* `constraint`: A minimal description of the constraint that was violated.\n\n* `attributePath`: A hint about the property or parameter that had an invalid value.\n\n* `detail`: A more detailed description of the constraint violation.\n\n* `invalidValue`: The value that was invalid. Can be a data structure.\n\n* `possibleValues`: An optional list of valid values for the property.\n\nThe `validationDetails` provide developers with information to troubleshoot bad requests.\nThey are not intended for automated consumption.\nThere's no guarantee that values are always present or in a uniform format.\n\n## Progress responses\n\nA progress response always contains a `retryAfter` field, which tells the integration how many seconds to wait until the next poll request.\nThe response can optionally include both the `message` field with a human-readable text about the current status and a `percent`, which is\na number that shows the progress as a percent.\nA progress response always has the `Retry-After` header set with the same value as the `retryAfter` field and an HTTP status 202.\n\nExamples:\n\n```\nHTTP/1.1 202 Accepted\nContent-Type: application/json\n{\n  \"progress\": {\n    \"message\": \"The request is queued on position 5.\",\n    \"percent\": 2,\n    \"retryAfter\": 5\n  }\n  \"links\": {\n    \"cancel\": \"https://tenant.acrolinx.cloud/api/v1/checks/ID100\"\n  }\n}\n```\n\n```\nHTTP/1.1 202 Accepted\nContent-Type: application/json\n{\n  \"progress\": {\n    \"retryAfter\": 1\n  }\n  \"links\": {}\n}\n```\n\n## Successful responses\n\nThe number of fields in successful response data depends on the request. For example, the response might contain additional fields if the \noriginal check request also asked for a Term Harvesting report.\n\nExample:\n\n```\nHTTP/1.1 200 Ok\nContent-Type: application/json\n{\n  \"data\": {\n    \"score\": 99,\n    \"textualScore\": \"Good job!\"\n  }\n  \"links\": {\n    \"submit\": \"https://tenant.acrolinx.cloud/api/v1/checks\"\n  }\n}\n```\n\n# HTML fields\n\nResponses may contain fields with HTML snippets that provide nice formatting in interactive integrations. These fields have a name that ends with \"Html\", for example, \"guidanceHtml\". Related fields with the same content may appear in plain text. If such a field exists, it will end with \"Text\" like in the example, \"guidanceText\".\n\nAll HTML fields only contain formatting tags that do not pose a security risk. A server-side allow list filters all tags.\n\n# JSON - Escape special characters\n\nSome JSON characters are special and require escaping. To escape a character, prefix the character with a backslash `\\`.\n\nBelow are some common characters that need to be escaped in JSON:\n\n|Character|Escape character|\n|----------------|------------|\n|Double quote|`\\\"`|\n|Backslash|`\\\\`|\n|Forward slash|`\\/`|\n|Backspace|`\\b`|\n|Form feed|`\\f`|\n|Newline|`\\n`|\n|Tab|`\\t`|\n|Unicode escape sequence for special characters|`\\uXXXX`|\n\nExample:\nThe value of the password is `backslash\\quote\"` in the JSON below. The special characters are escaped using a backslash.\n\n```json\n    {\n        \"username\": \"username\",\n        \"fullName\": \"full Name\",\n        \"password\": \"backslash\\\\quote\\\"\"\n    }\n```"
    },
    "host": "tenant.acrolinx.cloud",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/v1": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "platform": {
                                        "name": "Acrolinx Platform",
                                        "version": "2024.09.10156"
                                    },
                                    "server": {
                                        "name": "Core Server",
                                        "version": "2024.09.10846"
                                    },
                                    "guidancePackage": {
                                        "name": "Guidance Package for ACME",
                                        "version": "2024.09",
                                        "build": "7732",
                                        "date": "2024-09-13"
                                    },
                                    "locales": [
                                        "en"
                                    ]
                                },
                                "links": {
                                    "signIn": "https://tenant.acrolinx.cloud/api/v1/auth/sign-ins",
                                    "submitCheck": "http://tennant.acrolinx.cloud/api/v1/checking/checks"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "platform": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "server": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "guidancePackage": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                },
                                                "build": {
                                                    "type": "string"
                                                },
                                                "date": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "locales": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {
                                        "signIn": {
                                            "type": "string"
                                        },
                                        "submitCheck": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "platform": {
                                        "name": "Acrolinx Platform",
                                        "version": "2024.09.10156"
                                    },
                                    "server": {
                                        "name": "Core Server",
                                        "version": "2024.09.10846"
                                    },
                                    "guidancePackage": {
                                        "name": "Guidance Package for ACME",
                                        "version": "2024.09",
                                        "build": "7732",
                                        "date": "2024-09-13"
                                    },
                                    "locales": [
                                        "en"
                                    ]
                                },
                                "links": {
                                    "signIn": "https://tenant.acrolinx.cloud/api/v1/auth/sign-ins",
                                    "submitCheck": "http://tennant.acrolinx.cloud/api/v1/checking/checks"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Index",
                "operationId": "Index",
                "description": "This endpoint returns general information about the current Acrolinx\nversion. Starting with version 2024.09, it also contains information\nabout the installed linguistic configuration (referred to as a\n\"guidance package\"). Starting with version 2025.02, the response also\nincludes the expiration date and order number for the license that's currently installed.\n\n**Note**: This is the only web service method that provides a 200 response if no access token was sent.",
                "tags": [
                    "Index"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. \"\"",
                        "required": false,
                        "x-example": "\"\"",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/capabilities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "checking": {},
                                    "document": {}
                                },
                                "links": {}
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "checking": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "capabilities of the checking resource"
                                        },
                                        "document": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "capabilities of the document resource"
                                        }
                                    }
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "summary": "Capabilities",
                "operationId": "Capabilities",
                "description": "Learn about capabilities of the individual APIs. This overview helps if you want to \nuse more than one feature of the API.",
                "tags": [
                    "Index"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/auth/sign-ins": {
            "post": {
                "responses": {
                    "200": {
                        "description": "No sign-in needed, the response body will contain valid access tokens.\n\nAcrolinx may decide that the request is already sufficiently authorized. In this case,\nno sign-in process is started. The response will contain the same information as after\na successful sign-in. The following conditions may lead to this response:\n\n- The `X-Acrolinx-Auth` header contained a valid token.\n\n- Single sign-on is configured and valid credentials are provided.",
                        "headers": {},
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "201": {
                        "description": "If the `X-Acrolinx-Auth` header is absent a\nnew sign-in process is started. The response body contains two links.\nOne allows the user to complete the sign-in process.\nThe other helps the integration to acquire the session data:\n\n- `interactive` a link to a web page that allows the user to authenticate and\n      permit the integrations to access Acrolinx. If you provide a language in the\n      `X-Acrolinx-Client-Locale` header, the link will point to a localized\n      version of that web page if available and technically possible.\n\n- `poll` a link to a resource that will return an *access token* and information\n      about the user after sign-in. (see [GET `api/v1/auth/sign-ins/{id}`](#authentication-api-poll-for-a-new-api-token-get))\n\nNote that the sign-in process will time out. The `interactiveLinkTimeout` field\ncontains the length of time in seconds that the `interactive` link will stay valid. If the\nsign-in page was loaded before this time, Acrolinx will extend\nthe timeout. To detect timeouts after opening the sign-in page, use the `poll` link.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "state": "Started",
                                    "interactiveLinkTimeout": 900
                                },
                                "links": {
                                    "interactive": "https://tenant.acrolinx.cloud/dashboard.html?login=19901-2-8412998412",
                                    "poll": "https://tenant.acrolinx.cloud/api/v1/auth/sign-ins/185-0ijfgklejt2390tui"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string"
                                        },
                                        "interactiveLinkTimeout": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "state",
                                        "interactiveLinkTimeout"
                                    ]
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {
                                        "interactive": {
                                            "type": "string"
                                        },
                                        "poll": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "interactive",
                                        "poll"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "If invalid SSO credentials are supplied, the request is rejected. This occurs when an SSO username\nis present but the SSO password is wrong, missing, or the user couldn't be created.",
                        "headers": {
                            "WWW-Authenticate": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "503": {
                        "description": "Acrolinx is unable to start a sign-in process at this time.",
                        "headers": {
                            "Retry-After": {
                                "type": "string"
                            }
                        },
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Request or validate an API token",
                "operationId": "Request or validate an API token",
                "description": "The sign-in collection allows Acrolinx API integrations to request user authentication and to check\nthe validity and privileges of existing access tokens.\n\nIf Acrolinx is configured for single sign-on, then this endpoint will accept the configured credentials\nto authenticate the request.",
                "tags": [
                    "Authentication API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. 123579080a8d1fee12490a90dc3 (valid) OR (invalid/expired access token) OR (no access token)",
                        "required": false,
                        "x-example": "123579080a8d1fee12490a90dc3 (valid) OR (invalid/expired access token) OR (no access token)",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client-Locale",
                        "in": "header",
                        "description": "e.g. ja",
                        "required": false,
                        "x-example": "ja",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. QWxlU2hNyb2bHVnLWlunhQyR29Rm9xpbvZ2lZXRz; 1.0.1.45;",
                        "required": false,
                        "x-example": "QWxlU2hNyb2bHVnLWlunhQyR29Rm9xpbvZ2lZXRz; 1.0.1.45;",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/auth/sign-ins/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "A user completed the sign-in process and Acrolinx created a new access token.\n\nNote that this resource will disappear after this response.",
                        "headers": {},
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "202": {
                        "description": "The user hasn't authorized the sign-in yet. Request the same URI again to continue polling.\nNote that integrations should pace themselves by respecting the `Retry-After` header.",
                        "headers": {
                            "Retry-After": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "progress": {
                                    "retryAfter": 2
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "progress": {
                                    "type": "object",
                                    "properties": {
                                        "retryAfter": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "retryAfter"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Acrolinx has no knowledge of the polling token. If you used a valid poll URI, the cause of this response is\na timeout, or another poll request may have consumed the credentials.\n\nThe returned type is `interactive_sign_in_timed_out`, which distinguishes this response from a normal 404 caused by a wrong URL.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "error": {
                                    "type": "interactive_sign_in_timed_out",
                                    "status": 404,
                                    "title": "The interactive sign-in process timed out",
                                    "detail": "The interactive sign-in process timed out. Please start a sign-in."
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "number"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "detail": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "status",
                                        "title",
                                        "detail"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Poll for a new API token",
                "operationId": "Poll for a new API token",
                "description": "Use polling so your integration waits for a user to authenticate and authorize before the integration can use the\nAcrolinx API. Once the user has completed the sign-in process, the response will return a new access token.\n\nWhen polling returns a final result, the polling endpoint will disappear and return a `NOT FOUND` status.",
                "tags": [
                    "Authentication API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "poll-id for the authorization request",
                        "required": true,
                        "x-example": "99576707-ed8c-44b6-82b8-c3ced8f349d1",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. QWxlU2hNyb2bHVnLWlunhQyR29Rm9xpbvZ2lZXRz; 1.0.1.45",
                        "required": false,
                        "x-example": "QWxlU2hNyb2bHVnLWlunhQyR29Rm9xpbvZ2lZXRz; 1.0.1.45",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/checking/capabilities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "guidanceProfiles": [
                                        {
                                            "id": "aud-1",
                                            "displayName": "Tom the Technical Type",
                                            "language": {
                                                "id": "en-gb",
                                                "displayName": "English (Great Britain)"
                                            },
                                            "goals": [
                                                {
                                                    "id": "CORRECTNESS",
                                                    "displayName": "Correctness",
                                                    "color": "#00bfa5",
                                                    "scoring": "required"
                                                },
                                                {
                                                    "id": "CLARITY",
                                                    "displayName": "Clarity",
                                                    "color": "#ec407a",
                                                    "scoring": "recommended"
                                                },
                                                {
                                                    "id": "WORDS_AND_PHRASES",
                                                    "displayName": "Words and Phrases",
                                                    "color": "#ea80fc",
                                                    "scoring": "required"
                                                }
                                            ],
                                            "termSets": [
                                                {
                                                    "displayName": "Switches"
                                                },
                                                {
                                                    "displayName": "Acrolinx"
                                                }
                                            ]
                                        },
                                        {
                                            "id": "aud-2",
                                            "displayName": "Randolf Redakteur",
                                            "language": {
                                                "id": "de",
                                                "displayName": "German"
                                            },
                                            "goals": [
                                                {
                                                    "id": "CORRECTNESS",
                                                    "displayName": "Correctness",
                                                    "color": "#00bfa5",
                                                    "scoring": "required"
                                                }
                                            ],
                                            "termSets": []
                                        }
                                    ],
                                    "contentFormats": [
                                        {
                                            "id": "auto",
                                            "displayName": "Automatic Detection"
                                        },
                                        {
                                            "id": "text",
                                            "displayName": "Plain Text"
                                        },
                                        {
                                            "id": "markdown",
                                            "displayName": "Markdown"
                                        },
                                        {
                                            "id": "xml",
                                            "displayName": "XML"
                                        },
                                        {
                                            "id": "word_xml",
                                            "displayName": "XML (MS Word 2003)"
                                        }
                                    ],
                                    "contentEncodings": [
                                        "none",
                                        "zip,base64",
                                        "base64"
                                    ],
                                    "referencePattern": "\\.(xml|xhtm|xhtml)$|\\.(md|markdown|mdown|mkdn|mkd)$|\\.(docx|docm|pptx|pptm|xlsx|xlsm)$|\\.txt$",
                                    "checkTypes": [
                                        "batch",
                                        "interactive",
                                        "baseline",
                                        "automated"
                                    ],
                                    "reportTypes": [
                                        "extractedText",
                                        "termharvesting",
                                        "scorecard"
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guidanceProfiles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "language": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "displayName": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "goals": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "displayName": {
                                                                    "type": "string"
                                                                },
                                                                "color": {
                                                                    "type": "string"
                                                                },
                                                                "scoring": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "id",
                                                                "displayName",
                                                                "color",
                                                                "scoring"
                                                            ]
                                                        }
                                                    },
                                                    "termSets": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "displayName": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "displayName"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "displayName",
                                                    "language",
                                                    "goals",
                                                    "termSets"
                                                ]
                                            }
                                        },
                                        "contentFormats": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "displayName"
                                                ]
                                            }
                                        },
                                        "contentEncodings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "referencePattern": {
                                            "type": "string"
                                        },
                                        "checkTypes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "reportTypes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "guidanceProfiles": [
                                        {
                                            "id": "aud-1",
                                            "displayName": "Tom the Technical Type",
                                            "language": {
                                                "id": "en-gb",
                                                "displayName": "English (Great Britain)"
                                            },
                                            "goals": [
                                                {
                                                    "id": "CORRECTNESS",
                                                    "displayName": "Correctness",
                                                    "color": "#00bfa5",
                                                    "scoring": "required"
                                                },
                                                {
                                                    "id": "CLARITY",
                                                    "displayName": "Clarity",
                                                    "color": "#ec407a",
                                                    "scoring": "recommended"
                                                },
                                                {
                                                    "id": "WORDS_AND_PHRASES",
                                                    "displayName": "Words and Phrases",
                                                    "color": "#ea80fc",
                                                    "scoring": "required"
                                                }
                                            ],
                                            "termSets": [
                                                {
                                                    "displayName": "Switches"
                                                },
                                                {
                                                    "displayName": "Acrolinx"
                                                }
                                            ]
                                        },
                                        {
                                            "id": "aud-2",
                                            "displayName": "Randolf Redakteur",
                                            "language": {
                                                "id": "de",
                                                "displayName": "German"
                                            },
                                            "goals": [
                                                {
                                                    "id": "CORRECTNESS",
                                                    "displayName": "Correctness",
                                                    "color": "#00bfa5",
                                                    "scoring": "required"
                                                }
                                            ],
                                            "termSets": []
                                        }
                                    ],
                                    "contentFormats": [
                                        {
                                            "id": "auto",
                                            "displayName": "Automatic Detection"
                                        },
                                        {
                                            "id": "text",
                                            "displayName": "Plain Text"
                                        },
                                        {
                                            "id": "markdown",
                                            "displayName": "Markdown"
                                        },
                                        {
                                            "id": "xml",
                                            "displayName": "XML"
                                        },
                                        {
                                            "id": "word_xml",
                                            "displayName": "XML (MS Word 2003)"
                                        }
                                    ],
                                    "contentEncodings": [
                                        "none",
                                        "zip,base64",
                                        "base64"
                                    ],
                                    "referencePattern": "\\.(xml|xhtm|xhtml)$|\\.(md|markdown|mdown|mkdn|mkd)$|\\.(docx|docm|pptx|pptm|xlsx|xlsm)$|\\.txt$",
                                    "checkTypes": [
                                        "batch",
                                        "interactive",
                                        "baseline",
                                        "automated"
                                    ],
                                    "reportTypes": [
                                        "extractedText",
                                        "termharvesting",
                                        "scorecard"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "List checking capabilities",
                "operationId": "List checking capabilities",
                "description": "Use the checking capabilities to fetch a list of available style guides. If sublanguages are activated, they're included in the list of style guides.\n\nFor each style guide, Acrolinx provides information about the language, activated goals, and term sets. The integration may use this information\nfor filtering, but users can only select one style guide for checking. You cannot deselect individual goals within a style guide.\n\nFor each style guide, the goals contain an additional string field called `scoring`, which can have one of the following values:\n\n* `required` (this goal counts towards the score and writers should prioritize issues found in this goal when creating content).\n\n* `recommended` (this goal is a recommendation only and does not count towards the overall document score).\n\n**Note:** Before you get started with the Checking API, review the [authentication and authorization](https://acrolinxapi.docs.apiary.io/#introduction/authentication-and-authorization) requirements.",
                "tags": [
                    "Checking API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. your_client_signature",
                        "required": false,
                        "x-example": "your_client_signature",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/checking/checks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "id": "AB-153"
                                },
                                "links": {
                                    "result": "https://tenant.acrolinx.cloud/api/v1/checking/checks/AB-153",
                                    "cancel": "https://tenant.acrolinx.cloud/api/v1/checking/checks/AB-153"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "cancel": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "id": "AB-153"
                                },
                                "links": {
                                    "result": "https://tenant.acrolinx.cloud/api/v1/checking/checks/AB-153",
                                    "cancel": "https://tenant.acrolinx.cloud/api/v1/checking/checks/AB-153"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "error": {
                                    "detail": "The guidance profile doesn't exist or isn't available for the user id and language given.",
                                    "type": "content_goal",
                                    "title": "guidance profile doesn't exist",
                                    "status": 400
                                },
                                "links": {}
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                }
                            },
                            "example": {
                                "error": {
                                    "detail": "The guidance profile doesn't exist or isn't available for the user id and language given.",
                                    "type": "content_goal",
                                    "title": "guidance profile doesn't exist",
                                    "status": 400
                                },
                                "links": {}
                            }
                        }
                    }
                },
                "summary": "Submit a check",
                "operationId": "Submit a check",
                "description": "Submits a document for checking. After you upload a document, Acrolinx schedules the check. Once checking completes,\nAcrolinx makes the results available. The following steps summarize how to use the checking API:\n\n* Submit a check\n\n* Poll for progress\n\n* Download check results\n\nTo learn what file types Acrolinx supports, see the list of\n[supported input types](https://support.acrolinx.com/hc/en-us/articles/10211264846482-Supported-Input-Types).\nThe same information is available in the checking capabilities.",
                "tags": [
                    "Checking API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. your_client_signature",
                        "required": false,
                        "x-example": "your_client_signature",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/checking/checks/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Retry-After": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "progress": {
                                    "percent": 20,
                                    "message": "Waiting in queue",
                                    "retryAfter": "2"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "progress": {
                                    "type": "object",
                                    "properties": {
                                        "percent": {
                                            "type": "number"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "retryAfter": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "progress": {
                                    "percent": 20,
                                    "message": "Waiting in queue",
                                    "retryAfter": "2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "documentId": {
                                            "type": "string"
                                        },
                                        "validationDetails": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "constraint": {
                                                        "type": "string"
                                                    },
                                                    "attributePath": {
                                                        "type": "string"
                                                    },
                                                    "detail": {
                                                        "type": "string"
                                                    },
                                                    "invalidValue": {
                                                        "type": "null"
                                                    },
                                                    "possibleValues": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "status": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                }
                            },
                            "example": {
                                "error": {
                                    "message": "Custom field values are missing",
                                    "type": "custom_fields_incorrect",
                                    "title": "Custom field values are incomplete.",
                                    "documentId": "3487ahgfh5fg-fg3",
                                    "validationDetails": [
                                        {
                                            "title": "Custom field is required.",
                                            "constraint": "Custom field \"Field\" must not be empty.",
                                            "attributePath": "document.customFields.Field",
                                            "detail": "Cannot set custom field \"Field\" as it is required and its value is empty.",
                                            "invalidValue": null,
                                            "possibleValues": [
                                                "Correct Value 1",
                                                "Correct Value 2"
                                            ],
                                            "type": "Required"
                                        }
                                    ],
                                    "status": 400
                                },
                                "links": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Poll check result",
                "operationId": "Poll check result",
                "description": "Polls the check result. Acrolinx either returns a progress response or the completed result. The URL for the request is in the \"result\" link of the submitted check.\n\nIf you don't want to view detailed check results, you can use `HEAD` requests to poll the check status. While the check is in progress, you'll receive the status code\n202. There will also be a `Retry-After` header with a suggested retry delay.",
                "tags": [
                    "Checking API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the check id",
                        "required": true,
                        "x-example": "AB-153",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. your_client_signature",
                        "required": false,
                        "x-example": "your_client_signature",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            },
            "head": {
                "responses": {
                    "200": {
                        "description": "The check is done.",
                        "headers": {},
                        "examples": {}
                    },
                    "202": {
                        "description": "The check is in progress",
                        "headers": {
                            "Retry-After": {
                                "type": "string"
                            }
                        },
                        "examples": {}
                    },
                    "400": {
                        "description": "The check failed because of an error in the request.",
                        "headers": {},
                        "examples": {}
                    },
                    "422": {
                        "description": "Acrolinx can't process the file.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Poll check result",
                "operationId": "Poll check result",
                "description": "For response status codes and headers, visit the section [GET](#reference/checking-api/check-result/poll-check-result).",
                "tags": [
                    "Checking API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the check id",
                        "required": true,
                        "x-example": "AB-153",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. your_client_signature",
                        "required": false,
                        "x-example": "your_client_signature",
                        "type": "string"
                    }
                ],
                "consumes": []
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "id": "153"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "id": "153"
                                }
                            }
                        }
                    }
                },
                "summary": "Cancel check",
                "operationId": "Cancel check",
                "description": "Cancels a check. Users can only cancel checks that they submitted. The URL for the request is in the \"cancel\" link of the submitted check.",
                "tags": [
                    "Checking API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the check id",
                        "required": true,
                        "x-example": "AB-153",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. your_client_signature",
                        "required": false,
                        "x-example": "your_client_signature",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/checking/{batchId}/contentanalysis": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "links": [
                                        {
                                            "linkType": "withoutAccessToken",
                                            "link": "https://tenant.acrolinx.cloud/analytics/dashboard/app/entry/run.jsp?jrd_resext=%7Bactive%3A0%2Creslst%3A%5B%7Bname%3A%22%2FAcrolinxReports%2Fstandard%2FContent+Analysis.dsh%22%2C%22param_page%22%3Afalse%2Cver%3A-1%2C%22dsh_params%22%3A%5B%7B%22jrd_params%22%3A%7B%22BatchId%22%3A%22_nice_batch_id_88-xyz%22%2C%22CsBaseUrl%22%3A%22http%3A%2F%2Flocalhost%3A8031%22%2C%22CsOutputPath%22%3A%22%2Foutput%22%7D%7D%5D%7D%5D%7D&jrd_userinfo=%7B%22prefer%22%3A%7B%22rpt_lang%22%3A%22en%22%2C%22enableNLS%22%3Atrue%7D%7D&jrs.language=en"
                                        },
                                        {
                                            "linkType": "withAccessToken",
                                            "link": "https://tenant.acrolinx.cloud/analytics/dashboard/app/entry/run.jsp?jrd_resext=%7Bactive%3A0%2Creslst%3A%5B%7Bname%3A%22%2FAcrolinxReports%2Fstandard%2FContent+Analysis.dsh%22%2C%22param_page%22%3Afalse%2Cver%3A-1%2C%22dsh_params%22%3A%5B%7B%22jrd_params%22%3A%7B%22BatchId%22%3A%22_nice_batch_id_88-xyz%22%2C%22CsBaseUrl%22%3A%22http%3A%2F%2Flocalhost%3A8031%22%2C%22CsOutputPath%22%3A%22%2Foutput%22%7D%7D%5D%7D%5D%7D&jrd_userinfo=%7B%22prefer%22%3A%7B%22rpt_lang%22%3A%22en%22%2C%22enableNLS%22%3Atrue%7D%7D&jrs.language=en&apikey=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG11ZCI6ImFjcm9saW54OjA4MTEwYThjNzI3MjQzYTMiLCJuYmYiOjE1MDM5MjcyMzksImlzcyI6ImFjcm9saW54OjA4MTEwYThjNzI3MjQzYTM6NWQyNTQ2NWI5ZTA3NDNiZiIsImV4cCINjYwNTYzOSwidG9rZW5UeXBlIjoidXNlciIsImlhdCI6MTUwNDAxMzYzOSwianRpIjoiMmFmOTQzOWIzZDgyNzMwODAEyMGRiZmRlMmYifQ.Lj0chsnnRTX7IevJNyWMMlCviA6ecYAQ0kacy5EGQz0"
                                        },
                                        {
                                            "linkType": "shortWithAccessToken",
                                            "link": "http://localhost:8031/api/batch/123?apikey=eyJ0eXAiOiJKV1QiLCOiJhY3JvbGlueCIsInByaXZpbGVnZXMiOlsiQ2hlY2tpbmdBbmRDbGllbnRzLmRvd25sb2FkUmVwb3J0cyJdLCJuYmYiOjE1Mzc5NTQzMjksImlzcyI6ImFjcm9saW54OjA4MTEwYThjNzI3MjQzYTMiLCJleHAiOjE1MzgxMjcxMjksInRva2VuVHlwZSI6InByaXZpbGVnZXMiLCJpYXQi3MjksImp0aSI6IlZRTVNFUzc0SlRCR0JFVFMyWTVBRjJBU1RNIn0.ltac_6JK0s_uODrqrK3TkaUsZiXfrkamo&X-Acrolinx-Client-Locale=en"
                                        },
                                        {
                                            "linkType": "shortWithoutAccessToken",
                                            "link": "http://localhost:8031/api/batch/123?X-Acrolinx-Client-Locale=en"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "linkType": {
                                                        "type": "string"
                                                    },
                                                    "link": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "linkType",
                                                    "link"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "links": {},
                                "data": {
                                    "links": [
                                        {
                                            "linkType": "withoutAccessToken",
                                            "link": "https://tenant.acrolinx.cloud/analytics/dashboard/app/entry/run.jsp?jrd_resext=%7Bactive%3A0%2Creslst%3A%5B%7Bname%3A%22%2FAcrolinxReports%2Fstandard%2FContent+Analysis.dsh%22%2C%22param_page%22%3Afalse%2Cver%3A-1%2C%22dsh_params%22%3A%5B%7B%22jrd_params%22%3A%7B%22BatchId%22%3A%22_nice_batch_id_88-xyz%22%2C%22CsBaseUrl%22%3A%22http%3A%2F%2Flocalhost%3A8031%22%2C%22CsOutputPath%22%3A%22%2Foutput%22%7D%7D%5D%7D%5D%7D&jrd_userinfo=%7B%22prefer%22%3A%7B%22rpt_lang%22%3A%22en%22%2C%22enableNLS%22%3Atrue%7D%7D&jrs.language=en"
                                        },
                                        {
                                            "linkType": "withAccessToken",
                                            "link": "https://tenant.acrolinx.cloud/analytics/dashboard/app/entry/run.jsp?jrd_resext=%7Bactive%3A0%2Creslst%3A%5B%7Bname%3A%22%2FAcrolinxReports%2Fstandard%2FContent+Analysis.dsh%22%2C%22param_page%22%3Afalse%2Cver%3A-1%2C%22dsh_params%22%3A%5B%7B%22jrd_params%22%3A%7B%22BatchId%22%3A%22_nice_batch_id_88-xyz%22%2C%22CsBaseUrl%22%3A%22http%3A%2F%2Flocalhost%3A8031%22%2C%22CsOutputPath%22%3A%22%2Foutput%22%7D%7D%5D%7D%5D%7D&jrd_userinfo=%7B%22prefer%22%3A%7B%22rpt_lang%22%3A%22en%22%2C%22enableNLS%22%3Atrue%7D%7D&jrs.language=en&apikey=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG11ZCI6ImFjcm9saW54OjA4MTEwYThjNzI3MjQzYTMiLCJuYmYiOjE1MDM5MjcyMzksImlzcyI6ImFjcm9saW54OjA4MTEwYThjNzI3MjQzYTM6NWQyNTQ2NWI5ZTA3NDNiZiIsImV4cCINjYwNTYzOSwidG9rZW5UeXBlIjoidXNlciIsImlhdCI6MTUwNDAxMzYzOSwianRpIjoiMmFmOTQzOWIzZDgyNzMwODAEyMGRiZmRlMmYifQ.Lj0chsnnRTX7IevJNyWMMlCviA6ecYAQ0kacy5EGQz0"
                                        },
                                        {
                                            "linkType": "shortWithAccessToken",
                                            "link": "http://localhost:8031/api/batch/123?apikey=eyJ0eXAiOiJKV1QiLCOiJhY3JvbGlueCIsInByaXZpbGVnZXMiOlsiQ2hlY2tpbmdBbmRDbGllbnRzLmRvd25sb2FkUmVwb3J0cyJdLCJuYmYiOjE1Mzc5NTQzMjksImlzcyI6ImFjcm9saW54OjA4MTEwYThjNzI3MjQzYTMiLCJleHAiOjE1MzgxMjcxMjksInRva2VuVHlwZSI6InByaXZpbGVnZXMiLCJpYXQi3MjksImp0aSI6IlZRTVNFUzc0SlRCR0JFVFMyWTVBRjJBU1RNIn0.ltac_6JK0s_uODrqrK3TkaUsZiXfrkamo&X-Acrolinx-Client-Locale=en"
                                        },
                                        {
                                            "linkType": "shortWithoutAccessToken",
                                            "link": "http://localhost:8031/api/batch/123?X-Acrolinx-Client-Locale=en"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Get link to Content Analysis Dashboard",
                "operationId": "Get link to Content Analysis Dashboard",
                "description": "Returns the links to the human readable Content Analytics Dashboard, which aggregates information of all checks belonging to the given batch id. Requires the reporting read-only privilege. The link with an API token contains a new token with the reporting read-only privilege.",
                "tags": [
                    "Checking API"
                ],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "the batch check id",
                        "required": true,
                        "x-example": "XYZ-10-22-33",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Client",
                        "in": "header",
                        "description": "e.g. your_client_signature",
                        "required": false,
                        "x-example": "your_client_signature",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/user": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": [
                                    {
                                        "id": "5894f2bb-5b34-4874-bc40-ec64e9a4ca63",
                                        "username": "analyticsReadOnlyUser",
                                        "fullName": "",
                                        "createdOn": "2021-10-07T08:40:53.646Z",
                                        "activeTokenId": "",
                                        "lastIntegrationAccess": "1970-01-01T00:00:00Z",
                                        "licenseType": "builtin",
                                        "licenseStatus": "active",
                                        "checkingFrequency": "infrequent",
                                        "roles": [
                                            {
                                                "id": "898a7c32-2c39-4cde-becb-16f22243e9b8",
                                                "name": "Analytics Read-Only User",
                                                "default": false
                                            }
                                        ],
                                        "idpUser": true,
                                        "staffUser": true,
                                        "rolesSetByIdp": false,
                                        "properties": {
                                            "Segmentation.xml.DTDs": ""
                                        },
                                        "customFields": [
                                            {
                                                "key": "Department",
                                                "displayName": "Department",
                                                "inputType": "optional",
                                                "type": "list",
                                                "value": "Example Department",
                                                "possibleValues": [
                                                    "Example Department"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "id": "c85030fd-2e03-4c69-9946-0b4f5689522c",
                                        "username": "termcontribution",
                                        "fullName": "",
                                        "createdOn": "2021-10-07T08:40:53.642Z",
                                        "activeTokenId": "",
                                        "lastIntegrationAccess": "1970-01-01T00:00:00Z",
                                        "licenseType": "builtin",
                                        "licenseStatus": "inactive",
                                        "checkingFrequency": "infrequent",
                                        "roles": [
                                            {
                                                "id": "d66d4d00-3381-11e0-bc8e-0800200c9a66",
                                                "name": "Term Contributor",
                                                "default": false
                                            }
                                        ],
                                        "idpUser": true,
                                        "staffUser": true,
                                        "rolesSetByIdp": false,
                                        "properties": {
                                            "Segmentation.xml.DTDs": ""
                                        },
                                        "customFields": [
                                            {
                                                "key": "Department",
                                                "displayName": "Department",
                                                "inputType": "optional",
                                                "type": "list",
                                                "value": "Example Department",
                                                "possibleValues": [
                                                    "Example Department"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "id": "bb284474-e107-413e-9c15-d813ed7209e9",
                                        "username": "fred",
                                        "fullName": "Fred Freelancer",
                                        "createdOn": "2021-10-21T11:52:36.912Z",
                                        "activeTokenId": "touxmkywwmu5vk6nyqto2m75x6",
                                        "lastIntegrationAccess": "1970-01-01T00:00:00Z",
                                        "licenseType": "named",
                                        "licenseStatus": "active",
                                        "checkingFrequency": "infrequent",
                                        "roles": [
                                            {
                                                "id": "8c66c4e2-174a-4f77-b8d4-71bfa9ca4d2e",
                                                "name": "Author",
                                                "default": false
                                            },
                                            {
                                                "id": "bc5c91f3-fae1-49f7-8d60-d325077c6ef9",
                                                "name": "Super Administrator",
                                                "default": false
                                            }
                                        ],
                                        "idpUser": true,
                                        "staffUser": true,
                                        "rolesSetByIdp": false,
                                        "properties": {
                                            "Segmentation.xml.DTDs": ""
                                        },
                                        "customFields": [
                                            {
                                                "key": "Department",
                                                "displayName": "Department",
                                                "inputType": "optional",
                                                "type": "list",
                                                "value": "C",
                                                "possibleValues": [
                                                    "Example Department"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "id": "0593c6b4-99d9-4d43-886b-f67cb66df7ed",
                                        "username": "franz",
                                        "fullName": "Franz Hubendobler",
                                        "createdOn": "2021-11-01T07:31:18.365Z",
                                        "activeTokenId": "",
                                        "lastIntegrationAccess": "1970-01-01T00:00:00Z",
                                        "licenseType": "named",
                                        "licenseStatus": "inactive",
                                        "checkingFrequency": "infrequent",
                                        "roles": [
                                            {
                                                "id": "8c66c4e2-174a-4f77-b8d4-71bfa9ca4d2e",
                                                "name": "Author",
                                                "default": false
                                            }
                                        ],
                                        "idpUser": true,
                                        "staffUser": true,
                                        "rolesSetByIdp": false,
                                        "properties": {
                                            "Segmentation.xml.DTDs": ""
                                        },
                                        "customFields": [
                                            {
                                                "key": "Department",
                                                "displayName": "Department",
                                                "inputType": "optional",
                                                "type": "list",
                                                "value": "B",
                                                "possibleValues": [
                                                    "Example Department"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {
                                        "prev": {
                                            "type": "string",
                                            "description": "URI of the previous page"
                                        },
                                        "next": {
                                            "type": "string",
                                            "description": "URI of the next page"
                                        },
                                        "first": {
                                            "type": "string",
                                            "description": "URI of the first page"
                                        },
                                        "last": {
                                            "type": "string",
                                            "description": "URI of the last page"
                                        }
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get all users",
                "operationId": "Get all users",
                "description": "This request retrieves a list of all users in the order of creation.\n\n**Searching or filtering**\n\n- Use the `username` and `fullName` parameters to search or filter users.\n\n- The `username` and `fullName` query parameters are limited to 255 characters, are optional, and can't be `null`.\n\n- If the `username` and `fullName` parameters are set, the API will list users that match both parameters.\n\n- Use the `roles` parameter to filter users by multiple role ids.\n\n- Invalid role ids will return an empty list.\n\n**Sorting**\n\nIf you use the `sort` query parameter, you can only sort the list of users by 1 field.\nTo show the list in ascending or descending order, add a `+` or `-`, respectively.\n\n**Sorting notes:**\n\n- You can only sort by 1 field.\n\n- A query parameter can be any length and can include the order direction prefixes \"+\" or \"-\".\n\n- A query parameter cannot be empty or include spaces.\n\n- A query parameter can accept a mix of characters.\n\n- By default, the list appears in ascending order.\n\n- The list is also sorted by `username`, unless `username` is already the primary sort column.\n\n- Other sort columns include: `fullName`, `createdOn`, `lastIntegrationAccess`, `checkingFrequency`, `licenseType`, `licenseStatus`, and `customFields.{key}`.\n\n- The query parameter `licenseType` sorts by two fields: `licenseType` and `licenseStatus`.\n\n- To sort by a custom field, the sort value needs to include `customFields`, `.`, and the `{key}`. The key is the name of the custom field.\n\nWhen you sort by `customFields` in ascending order, empty `customFields` values will appear at the beginning of the list. If you sort\nin descending order, empty values will appear at the end of the list.\n\nTo make sure that the sorting behavior for custom fields is consistent, the following special characters are sortable: `` !@$^*()_+-=,./;'[]<>?:|~` ``\nIf you use any additional special characters, the sorting behavior may be inconsistent.\n\nSo that the `+` character encoded to `%2B` stays valid, you have to encode the query parameters according\nto [encodeURIComponent](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent). \nYou can always leave out the `+` character, because the user list appears in ascending order by default.\n\n**Pagination**\n\nFor a better overview, you might want to view the list of users in pages instead of as one long list.\nTo request a paginated response, add the query parameters `page` and `per_page`. \nYou'll need to set the `page` parameter. The page count always starts at `1`.\nBy default, `per_page` is set to `10`. You can display as many as 500 users per page. This is an optional parameter.\n\nIf you request a paginated response, Acrolinx will add the following header values:\n\n| Header                     | Description                                     |\n|----------------------------|-------------------------------------------------|\n| `X-Acrolinx-Page`          | The index of the current page, starting at `1`. |\n| `X-Acrolinx-Next-Page`     | The index of the next page.                     |\n| `X-Acrolinx-Previous-Page` | The index of the previous page.                 |\n| `X-Acrolinx-Total-Pages`   | The total number of pages.                      |\n| `X-Acrolinx-Total`         | The total number of items.                      |\n\nIn addition to the header values, the response object also contains a few URLs\nwithin the `links` object:\n\n| Relation | Description                       |\n|----------|-----------------------------------|\n| `next`   | The URL to get the next page.     |\n| `prev`   | The URL to get the previous page. |\n| `first`  | The URL to get the first page.    |\n| `last`   | The URL to get the last page.     |\n\nIf there aren't any next or previous pages, you won't see the `next` and `prev` links.\nFor example, when you view page 1, you won't see a `prev` link because there's no page 0. \nThis is also the case for the values in the headers.\n\n**Note:** When you switch to the next or previous page, you'll see the current paginated view at the time of the API call. \nThis view will also reflect any changes to the underlying data source. Say you're on page 2 of 10 with 10 records per page but  \nthen you decide to delete 10 users before you call the API to fetch page 3. Now when you switch to page 3, the response will show page 3 of 9.\n\nThe example response includes the pagination URLs and query parameters in the `links` object so you know what to expect.\n\n**Dynamically include or exclude nested data**\n\nIf you manage a large number of users, you can use the query parameters `includeCustomField` and `excludeProperties` to filter nested data.\n\nBy default, all custom fields are nested in the user model.\nUse the `includeCustomField` parameter to limit the returned fields to those that match the key passed in the parameter value.\nThis parameter is helpful if you want to fetch a specific set of custom fields to reduce data transfer.\nTo include more than one custom field, add `&includeCustomField={Key}` to the request N times.\nTo exclude all custom fields, use the parameter `&excludeCustomFields=true`. This takes priority over any\n`includeCustomField` parameters that are present, and will always result in no custom fields being returned.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Optional query parameter for searching by username.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullName",
                        "in": "query",
                        "description": "Optional query parameter for searching by full name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Optional query parameter for sorting by an attribute.\n\n+ Prefix the field with:\n    + **\"+\"** for ascending order, or\n    + **\"-\"** for descending order.\n\n+ **Note:** \n    + Omitting a prefix will sort in ascending order.\n    + Use `customFields.{key}` to sort by custom fields. `{key}` is the name of the custom field.",
                        "required": false,
                        "type": "string",
                        "default": "username",
                        "enum": [
                            "username",
                            "fullName",
                            "createdOn",
                            "lastIntegrationAccess",
                            "checkingFrequency",
                            "licenseType",
                            "licenseStatus",
                            "customFields.{key}"
                        ]
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Optional query parameter for pagination",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Optional query parameter for sizing a page",
                        "required": false,
                        "type": "number",
                        "default": 10
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "Optional query parameter to filter by multiple role ids",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "The username"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user"
                                        },
                                        "createdOn": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the user was created"
                                        },
                                        "lastIntegrationAccess": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the last integration access occurred"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent' | 'builtin']"
                                        },
                                        "licenseStatus": {
                                            "type": "string",
                                            "description": "The license status"
                                        },
                                        "activeTokenId": {
                                            "type": "string",
                                            "description": "Displays the currently active API token's id or an empty string if there’s no active token"
                                        },
                                        "checkingFrequency": {
                                            "type": "string",
                                            "enum": [
                                                "frequent",
                                                "infrequent",
                                                "regular"
                                            ],
                                            "description": "Gives a rough idea of the pattern of checking frequency across a user's lifetime in days"
                                        },
                                        "properties": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "Key/Value pair of properties"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assigned roles",
                                            "items": {}
                                        },
                                        "idpUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has any linked identity providers"
                                        },
                                        "staffUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user is an Acrolinx staff member"
                                        },
                                        "rolesSetByIdp": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has their roles managed by their identity provider"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "description": "List of custom fields",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create a user",
                "operationId": "Create a user",
                "description": "**Note:**\n\n- The username needs to be unique and is limited to 255 characters.\n\n- The `fullName` field is limited to 255 characters (optional).\n\n- The license type can either be \"named\" or \"concurrent\" (optional).\n\n- You need `UserAndRoles.editUser` privileges to perform this request.\n\n**Password requirements**\n\nIf you want to create a user, the password field is required.\nYour password needs to meet the following requirements:\n\n- Composed of ASCII printable characters\n\n- Include at least 1 lowercase letter\n\n- Include at least 1 uppercase letter\n\n- Include at least 1 digit\n\n- Include at least 1 special character\n\n- At least 10 characters long\n\n- No more than 64 characters long\n\n**Be very careful in the following cases:**\n\n- Federated authentication is enabled:\n  - Users are created automatically with federated authentication.\n  - Only users created by the identity provider can sign in to Acrolinx.\n  - Users that you create with the API can only be used for automation. For example, interactions with the Acrolinx API.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "description": "The unique username, maximum length 255 characters"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user, maximum length 255 characters (optional)"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "The user password, length between 1 and 128 characters (optional)"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent'] (optional)"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assignable roles (optional)"
                                        }
                                    },
                                    "example": {
                                        "username": "fred",
                                        "fullName": "Fred Freelancer",
                                        "password": "P@ssW0rd12345!"
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "description": "The unique username, maximum length 255 characters"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user, maximum length 255 characters (optional)"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "The user password, length between 1 and 128 characters (optional)"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent'] (optional)"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assignable roles (optional)"
                                        }
                                    },
                                    "example": {
                                        "username": "fred",
                                        "fullName": "Fred Freelancer",
                                        "password": "P@ssW0rd12345!",
                                        "licenseType": "named"
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "description": "The unique username, maximum length 255 characters"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user, maximum length 255 characters (optional)"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "The user password, length between 1 and 128 characters (optional)"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent'] (optional)"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assignable roles (optional)"
                                        }
                                    },
                                    "example": {
                                        "username": "fred",
                                        "fullName": "Fred Freelancer",
                                        "password": "P@ssW0rd12345!",
                                        "roles": [
                                            {
                                                "id": "d66d4d00-3381-11e0-bc8e-0800200c9a66",
                                                "name": "Term Contributor"
                                            },
                                            {
                                                "id": "6a0ebe93-f735-4b08-b6f2-66f7ecc70190",
                                                "name": "Term Browser Administrator"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "description": "The unique username, maximum length 255 characters"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user, maximum length 255 characters (optional)"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "The user password, length between 1 and 128 characters (optional)"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent'] (optional)"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assignable roles (optional)"
                                        }
                                    },
                                    "example": {
                                        "username": "fred",
                                        "fullName": "Fred Freelancer",
                                        "password": "P@ssW0rd12345!",
                                        "customFields": [
                                            {
                                                "key": "Department",
                                                "value": "Example Department"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "The username"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user"
                                        },
                                        "createdOn": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the user was created"
                                        },
                                        "lastIntegrationAccess": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the last integration access occurred"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent' | 'builtin']"
                                        },
                                        "licenseStatus": {
                                            "type": "string",
                                            "description": "The license status"
                                        },
                                        "activeTokenId": {
                                            "type": "string",
                                            "description": "Displays the currently active API token's id or an empty string if there’s no active token"
                                        },
                                        "checkingFrequency": {
                                            "type": "string",
                                            "enum": [
                                                "frequent",
                                                "infrequent",
                                                "regular"
                                            ],
                                            "description": "Gives a rough idea of the pattern of checking frequency across a user's lifetime in days"
                                        },
                                        "properties": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "Key/Value pair of properties"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assigned roles",
                                            "items": {}
                                        },
                                        "idpUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has any linked identity providers"
                                        },
                                        "staffUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user is an Acrolinx staff member"
                                        },
                                        "rolesSetByIdp": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has their roles managed by their identity provider"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "description": "List of custom fields",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get a user",
                "operationId": "Get a user",
                "description": "This request returns information about a user.\nThe information includes the user id, username, the user's full name, the date the user was created, the last time the user accessed an integration, checking frequency, tenant ID, token ID, license type, and license status.\nYou'll also see properties, roles, and custom fields.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the user, unique identifier",
                        "required": true,
                        "x-example": "eb323701-839f-4998-b56e-3e20c70259c5",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "The username"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user"
                                        },
                                        "createdOn": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the user was created"
                                        },
                                        "lastIntegrationAccess": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the last integration access occurred"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent' | 'builtin']"
                                        },
                                        "licenseStatus": {
                                            "type": "string",
                                            "description": "The license status"
                                        },
                                        "activeTokenId": {
                                            "type": "string",
                                            "description": "Displays the currently active API token's id or an empty string if there’s no active token"
                                        },
                                        "checkingFrequency": {
                                            "type": "string",
                                            "enum": [
                                                "frequent",
                                                "infrequent",
                                                "regular"
                                            ],
                                            "description": "Gives a rough idea of the pattern of checking frequency across a user's lifetime in days"
                                        },
                                        "properties": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "Key/Value pair of properties"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assigned roles",
                                            "items": {}
                                        },
                                        "idpUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has any linked identity providers"
                                        },
                                        "staffUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user is an Acrolinx staff member"
                                        },
                                        "rolesSetByIdp": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has their roles managed by their identity provider"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "description": "List of custom fields",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Update a user",
                "operationId": "Update a user",
                "description": "",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the user, unique identifier",
                        "required": true,
                        "x-example": "eb323701-839f-4998-b56e-3e20c70259c5",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "fullName": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "fullName"
                                    ],
                                    "example": {
                                        "fullName": "New Full Name"
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "roles": {
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "roles"
                                    ],
                                    "example": {
                                        "roles": [
                                            {
                                                "id": "8c66c4e2-174a-4f77-b8d4-71bfa9ca4d2e"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "customFields": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "customFields": [
                                            {
                                                "key": "Test Field",
                                                "value": "This is a string of text"
                                            },
                                            {
                                                "key": "Department",
                                                "value": "Example Department"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "customFields": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "customFields": [
                                            {
                                                "key": "Test Field",
                                                "value": ""
                                            },
                                            {
                                                "key": "Department",
                                                "value": ""
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "fullName": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "fullName"
                                    ],
                                    "example": {
                                        "password": "New_Secure_P@ssW0rd"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete a user",
                "operationId": "Delete a user",
                "description": "This method deletes a specified user based on its *id*.\n\n**Note:** You can only successfully delete a user under the following conditions:\n\n- The user isn't a preconfigured, built-in user such as \"admin\", \"termcontribution\", or \"analyticsReadOnlyUser\".\n\nTo read more about managing users and built-in users, see [User Management](https://support.acrolinx.com/hc/en-us/sections/10210965582994-User-Management) in the Acrolinx documentation.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the user, unique identifier",
                        "required": true,
                        "x-example": "eb323701-839f-4998-b56e-3e20c70259c5",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        },
        "/api/v1/user/self": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "The username"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user"
                                        },
                                        "createdOn": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the user was created"
                                        },
                                        "lastIntegrationAccess": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the last integration access occurred"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent' | 'builtin']"
                                        },
                                        "licenseStatus": {
                                            "type": "string",
                                            "description": "The license status"
                                        },
                                        "activeTokenId": {
                                            "type": "string",
                                            "description": "Displays the currently active API token's id or an empty string if there’s no active token"
                                        },
                                        "checkingFrequency": {
                                            "type": "string",
                                            "enum": [
                                                "frequent",
                                                "infrequent",
                                                "regular"
                                            ],
                                            "description": "Gives a rough idea of the pattern of checking frequency across a user's lifetime in days"
                                        },
                                        "properties": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "Key/Value pair of properties"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assigned roles",
                                            "items": {}
                                        },
                                        "idpUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has any linked identity providers"
                                        },
                                        "staffUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user is an Acrolinx staff member"
                                        },
                                        "rolesSetByIdp": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has their roles managed by their identity provider"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "description": "List of custom fields",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get a user (self)",
                "operationId": "Get a user (self)",
                "description": "This is an alternative way to get information about the current user (authorized in the request).",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/user/custom-fields-missing": {
            "head": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "X-Acrolinx-Total": {
                                "type": "string"
                            }
                        },
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Count users",
                "operationId": "Count users",
                "description": "Returns the total number of users who are missing one or more required user custom fields.\n\n**Note:**\n\n- The response has no content.\n\n- The user count appears in the header `X-Acrolinx-Total`.\n\n- The header value is a numeral.\n\n- It returns a 0 (zero) when all required custom fields are present.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": []
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "The username"
                                        },
                                        "fullName": {
                                            "type": "string",
                                            "description": "The full name of the user"
                                        },
                                        "createdOn": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the user was created"
                                        },
                                        "lastIntegrationAccess": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the last integration access occurred"
                                        },
                                        "licenseType": {
                                            "type": "string",
                                            "description": "Indicates the type of license as one of ['named' | 'concurrent' | 'builtin']"
                                        },
                                        "licenseStatus": {
                                            "type": "string",
                                            "description": "The license status"
                                        },
                                        "activeTokenId": {
                                            "type": "string",
                                            "description": "Displays the currently active API token's id or an empty string if there’s no active token"
                                        },
                                        "checkingFrequency": {
                                            "type": "string",
                                            "enum": [
                                                "frequent",
                                                "infrequent",
                                                "regular"
                                            ],
                                            "description": "Gives a rough idea of the pattern of checking frequency across a user's lifetime in days"
                                        },
                                        "properties": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "Key/Value pair of properties"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "description": "List of assigned roles",
                                            "items": {}
                                        },
                                        "idpUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has any linked identity providers"
                                        },
                                        "staffUser": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user is an Acrolinx staff member"
                                        },
                                        "rolesSetByIdp": {
                                            "type": "boolean",
                                            "description": "Indicates whether the user has their roles managed by their identity provider"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "description": "List of custom fields",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {
                            "appplication/json": "// when the page parameter has an invalid value such as 0 or negative number\n{\n    \"links\": {},\n    \"error\": {\n        \"reference\": \"b2045b7f-1dce-49e7-880a-93874f427554\",\n        \"detail\": \"Invalid page request attribute, it must be greater than zero\",\n        \"type\": \"client\",\n        \"title\": \"Bad Request\",\n        \"status\": 400\n    }\n}\n"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get users",
                "operationId": "Get users",
                "description": "Returns a list of users who are missing one or more required user custom fields.\n\n**Note:** Similar to the User Resource > Get All Users request, it supports pagination. [See more details there](### Get all users).",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Optional query parameter for pagination",
                        "required": false,
                        "x-example": "5",
                        "type": "number"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Optional query parameter for sizing a page",
                        "required": false,
                        "x-example": "20",
                        "type": "number"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "appplication/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/user/self/tokens": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "type": "api",
                                    "issuedAt": "2021-04-23T07:54:07Z",
                                    "expiresAt": "2025-04-22T07:54:07Z",
                                    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXJtY29udHJpYnV0aW9uIiwiYXVkIjoiYWNy..."
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "issuedAt": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the token was issued"
                                        },
                                        "expiresAt": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the token will expire"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "The generated API token (JWT)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create an API token (Self)",
                "operationId": "Create an API token (Self)",
                "description": "Use this method to create an API token for the current user.\n\n**Note:** You don't need extra privileges or roles to create a new API token associated with the user authorized in the request.\n\n**Note:** This endpoint lets users use Basic authentication to avoid reusing an existing API token.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. Basic dGVzdDp0ZXN0",
                        "required": false,
                        "x-example": "Basic dGVzdDp0ZXN0",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/user/{id}/tokens": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "type": "api",
                                    "issuedAt": "2021-04-23T07:54:07Z",
                                    "expiresAt": "2025-04-22T07:54:07Z",
                                    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXJtY29udHJpYnV0aW9uIiwiYXVkIjoiYWNyb2xpbngiLCJuYmYiOjE2MTkwNzgwNDcsImlzcyI6ImFjcm9saW54OjAwMDBmZmZmZmZmZjAwMDAiLCJleHAiOjE3NDUzMDg0NDcsInRva2VuVHlwZSI6ImFwaSIsImlhdCI6MTYxOTE2NDQ0NywianRpIjoid3lvaXZoenl3Y3dwN3B4ejc2a29xN2F5NDQifQ.hRa2kHPl7EJ6xm115UOmu4QuppFoST7E626ceIsPeCI"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "issuedAt": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the token was issued"
                                        },
                                        "expiresAt": {
                                            "type": "string",
                                            "description": "The ISO8601 timestamp indicating when the token will expire"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "The generated API token (JWT)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create an API token for users",
                "operationId": "Create an API token for users",
                "description": "Use this method to create an API token for users based on their *id*.\n\nTypical use cases for this API:\n1. Create an API token for personal use\n    - 1.1. Use the *Current user* request to get your own unique identifier *id*.\n    - 1.2. Enter your *id* as a parameter.\n    - 1.3. Start using the issued API token.\n2. Create an API token for someone else\n    - 2.1. Use the *Get users* request to get the unique identifier *id* for another user.\n    - 2.2. Enter the other user's *id* as a parameter.\n    - 2.3. Give the API token to the user securely.\n\n**Note:** You can only create an API token if you have the appropriate privileges:\n\n* To create an API token for yourself, you need to be authorized with a valid access token.\n\n* To create an API token for someone else, you need the privilege `UserAndRoles.setApiTokensForOthers` and you need to be authorized with a valid access token.\n\n**Alternative use case:** Create an API token to impersonate a user\n\nSometimes an admin might want to impersonate a user to help troubleshoot.\n    If a user comes across a bug, for example, an admin may want to impersonate the user to try and duplicate the problem.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the user, unique identifier",
                        "required": true,
                        "x-example": "eb323701-839f-4998-b56e-3e20c70259c5",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/user/random-passwords": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Cache-Control": {
                                "type": "string"
                            },
                            "Pragma": {
                                "type": "string"
                            },
                            "Expires": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "value": "#n(Y2Ne|=ODfEV @,y8I"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "description": "a random, policy-compliant password"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get a randomly generated compliant password",
                "operationId": "Get a randomly generated compliant password",
                "description": "**Password Requirements**\n\nA password needs to meet the following requirements:\n\n- Composed of ASCII printable characters\n\n- Includes at least 1 lowercase letter\n\n- Includes at least 1 uppercase letter\n\n- Includes at least 1 digit\n\n- Includes at least 1 special character\n\n- At least 10 characters long\n\n- No more than 64 characters long\n\n**Note:**\n\n- You need the `UserAndRoles.editUser` privilege.\n\n- The randomly generated password isn't saved anywhere.\n\n- The HTTP requests aren't cached.\n\n- The randomly generated passwords are always 20 characters long.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/user/{id}/_release": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Release an active named user license",
                "operationId": "Release an active named user license",
                "description": "This method uses the *id* to release an active license consumed by a user.\n\n**Note:**\n\n- You can only release users with the `named` license type.\n\n- If you release the license of a user who isn't consuming a license, you won't see an error.\n\n- To release licenses, you need the `UserAndRoles.deleteSessions` privilege.\n\n**Result:** User's `licenseStatus` changed from `active` to `inactive`.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the user, unique identifier",
                        "required": true,
                        "x-example": "eb323701-839f-4998-b56e-3e20c70259c5",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        },
        "/api/v1/user/{id}/_request_cf_update": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Request user information update",
                "operationId": "Request user information update",
                "description": "The user specified by the *id* in this request will be asked to update their user information.\n\n**Note:**\n\n- The next time the user signs in, they'll need to re-enter their user information in a form.\n\n- If you repeat the request for the same user UUID, you won't be notified that you already submitted a request.\n\n- To request a user information update, you need the `UserAndRoles.editUser` privilege.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the user, unique identifier",
                        "required": true,
                        "x-example": "eb323701-839f-4998-b56e-3e20c70259c5",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        },
        "/api/v1/user/_export": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Content-Disposition": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "text/csv": "user_id;Username;\"Full Name\";Roles;\"Created On\";\"Last Integration Access\";\"Checking Frequency\";\"License Type\";\"License Status\";Department\n\"1ba8d14c-7697-4dbd-b370-3d22662e6fe0\";termcontribution;\"Term Contribution\";\"Term Contributor\";\"2021-05-12T15:40:00.876Z\";Never;infrequent;builtin;inactive;\"R&D\"\n\"f265a1b7-4fed-4ff3-b2d4-9dc6e29e268f\";analyticsReadOnlyUser;\"Analytics Read Only User\";\"Analytics Read-Only User\";\"2021-05-12T15:40:00.876Z\";Never;infrequent;builtin;inactive;\"Example Department\"\n\"4f86f443-e5e3-49c9-93da-cb1f89cd28c7\";admin;Adminisztrator;\"Super Administrator\";\"2021-05-12T15:40:00.866Z\";Never;infrequent;builtin;inactive;IT\n\"05aa0b12-a3b1-455f-9aa6-f48034c191ae\";termapiaccess;\"Term API Access (builtin)\";\"Terminology API Access\";\"2021-05-12T15:40:00.876Z\";Never;infrequent;builtin;inactive;\n\"394cdff2-bde8-41d2-85cd-34cd3bbca350\";termtargetaccess;\"Term Target Access (builtin)\";\"Term Browser User, Term Browser Administrator\";\"2021-05-12T15:40:00.876Z\";Never;infrequent;builtin;inactive;\n"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Export a list of users",
                "operationId": "Export a list of users",
                "description": "This API provides an easy way to export a concise user list in a text file.\n\nThe endpoint uses content negotiation to determine the format of the export. To specify the format you prefer, include the `Accept` header in your request. See the `Supported formats` section for more information about the formats that Acrolinx currently supports.\n\n**Supported formats:**\n\n+ `text/csv` (default, file extension is `.csv`)\n\n**Note:** If you don't specify the format in the `Accept` header, the default will be used.\n\n**Content Disposition:**\n\nThe API also returns the `Content-Disposition` response header to give information about the returned content.\nWith this information, browsers can recognize downloadable attachments that users can save locally.\n\nSet the header parameters as follows:\n\n+ `attachment` - Indicates that the content should be downloaded.\n\n+ `filename=\"acrolinx_users_export_yyyyMMdd_HHmmss.{fileExt}\"` - Most browsers present a \"Save as\" dialog for attachments. This will be prefilled with the value of the filename parameter.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "e.g. text/csv",
                        "required": false,
                        "x-example": "text/csv",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/csv"
                ],
                "consumes": []
            }
        },
        "/api/v1/user/bulk": {
            "post": {
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {}
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create users in bulk",
                "operationId": "Create users in bulk",
                "description": "Use this API to create a list of new users. All user objects follow the requirements and constraints\nnoted in the Create User API section.\n\n**Note:** With each bulk request, you can create up to 100 users. The minimum is 1.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "users": {
                                    "type": "array",
                                    "description": "List of users to be created"
                                }
                            },
                            "example": [
                                {
                                    "username": "new.user.1",
                                    "fullName": "New User 1",
                                    "password": "P@ssW0rd12345!"
                                },
                                {
                                    "username": "new.user.2",
                                    "fullName": "New User 2",
                                    "password": "P@ssW0rd12345!"
                                },
                                {
                                    "username": "new.user.3",
                                    "fullName": "New User 3",
                                    "password": "P@ssW0rd12345!"
                                },
                                {
                                    "username": "new.user.4",
                                    "fullName": "New User 4",
                                    "password": "P@ssW0rd12345!"
                                },
                                {
                                    "username": "new.user.5",
                                    "fullName": "New User 5",
                                    "password": "P@ssW0rd12345!"
                                }
                            ]
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "status": 204,
                                        "id": "33b5b2e3-6870-4ecb-92f9-ac496a9ac2c3"
                                    }
                                ],
                                "errors": [
                                    {
                                        "status": 404,
                                        "id": "no-user-with-this-id-for-sure",
                                        "type": "client",
                                        "title": "Not Found",
                                        "detail": "HTTP 404 Not Found",
                                        "reference": "8aafe860-8fa7-4f5f-89c6-40dda1c444c4"
                                    },
                                    {
                                        "status": 400,
                                        "id": null,
                                        "type": "client",
                                        "title": "Bad Request",
                                        "detail": "The provided uuid is not a valid user id.",
                                        "reference": "cc3c4907-5fa2-40e9-988a-3623a5c358d7"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {}
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete users in bulk",
                "operationId": "Delete users in bulk",
                "description": "This API lets you delete a list of users. All user ids follow the requirements and constraints\nnoted in the \"Delete User API\" section.\n\n**Note:** With each bulk request, you can delete up to 100 users. The minimum is 1.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": [
                                        "d6601a5b-c74e-4753-8d7a-4a7d15e71149",
                                        "d7b6d898-79b2-4a8b-9afd-760fdda9c921",
                                        "bb284474-e107-413e-9c15-d813ed7209e9",
                                        "c4eba54b-4cb6-4045-85f1-88e72fd9be6f",
                                        "b08309c7-87ee-4270-8d94-de5a916d24be"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {},
                                    "example": [
                                        "d6601a5b-c74e-4753-8d7a-4a7d15e71149",
                                        "d7b6d898-79b2-4a8b-9afd-760fdda9c921",
                                        "bb284474-e107-413e-9c15-d813ed7209e9",
                                        "c4eba54b-4cb6-4045-85f1-88e72fd9be6f",
                                        "b08309c7-87ee-4270-8d94-de5a916d24be"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {},
                                    "example": [
                                        "f265a1b7-4fed-4ff3-b2d4-9dc6e29e268f",
                                        "no-user-with-this-id-for-sure",
                                        null
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/user/bulk/_request_cf_update": {
            "put": {
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "status": 204,
                                        "id": "f265a1b7-4fed-4ff3-b2d4-9dc6e29e268f"
                                    }
                                ],
                                "errors": [
                                    {
                                        "status": 400,
                                        "id": null,
                                        "type": "client",
                                        "title": "Bad Request",
                                        "detail": "The provided uuid is not a valid user id.",
                                        "reference": "d18c9c62-faed-4753-b4f4-6a6d6e967d9e"
                                    },
                                    {
                                        "status": 404,
                                        "id": "no-user-with-this-id-for-sure",
                                        "type": "client",
                                        "title": "Not Found",
                                        "detail": "User does not exist with the given id.",
                                        "reference": "592577df-4526-4eea-a4bb-1628102a063c"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {}
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Request user information update in bulk",
                "operationId": "Request user information update in bulk",
                "description": "This API is the bulk operation of \"Request User Information Update\" from the \"User Commands\" group.\nIt lets you ask multiple users to update their user information.\n\n**Note:** Currently, there's no limit on the number of users that you can request to update their information.",
                "tags": [
                    "User API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {}
                                },
                                {
                                    "type": "object",
                                    "properties": {},
                                    "example": [
                                        "f265a1b7-4fed-4ff3-b2d4-9dc6e29e268f",
                                        "no-user-with-this-id-for-sure",
                                        null
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/custom-fields/user": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": [
                                    {
                                        "key": "key1",
                                        "displayName": "displayName1",
                                        "inputType": "required",
                                        "type": "list",
                                        "possibleValues": [
                                            "",
                                            "possibleValue1",
                                            "possibleValue2"
                                        ]
                                    },
                                    {
                                        "key": "key2",
                                        "displayName": "displayName2",
                                        "inputType": "optional",
                                        "type": "text"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "description": "The unique key of the custom field"
                                            },
                                            "displayName": {
                                                "type": "string",
                                                "description": "The name to be displayed"
                                            },
                                            "inputType": {
                                                "type": "string",
                                                "description": "Indicates the origin of the field ['required' | 'optional' | 'externallyProvided']"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Indicates the type ['list' | 'text']"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "The value of the field"
                                            },
                                            "possibleValues": {
                                                "type": "array",
                                                "description": "List of possible valid values"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get custom fields",
                "operationId": "Get custom fields",
                "description": "Shows a list of your user custom fields.",
                "tags": [
                    "Custom fields API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/licenses/statistics": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "named": {
                                        "licensed": 150,
                                        "active": 58,
                                        "inactive": 23,
                                        "available": 92
                                    },
                                    "concurrent": {
                                        "licensed": 50,
                                        "existing": 10
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "named": {
                                            "type": "object",
                                            "properties": {
                                                "licensed": {
                                                    "type": "number",
                                                    "description": "The total number of named licenses available"
                                                },
                                                "active": {
                                                    "type": "number",
                                                    "description": "The number of active named users"
                                                },
                                                "inactive": {
                                                    "type": "number",
                                                    "description": "The number of inactive named users"
                                                },
                                                "available": {
                                                    "type": "number",
                                                    "description": "The number of available licenses (licensed - active)"
                                                }
                                            }
                                        },
                                        "concurrent": {
                                            "type": "object",
                                            "properties": {
                                                "licensed": {
                                                    "type": "number",
                                                    "description": "The total number of concurrent licenses available"
                                                },
                                                "existing": {
                                                    "type": "number",
                                                    "description": "The number of concurrent licenses used"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get license statistics for users",
                "operationId": "Get license statistics for users",
                "description": "Returns license statistics for the Acrolinx instance and shows the sum of license types `named` and `concurrent`.\nAcrolinx checks the following conditions for all users to qualify them for inclusion in the calculation:\n\n- Must be one of the following License Types `named` or `concurrent`\n\n- For `named` license they must be active and satisfy the following:\n    - Be activated for `Checking` session type\n    - Must not be free of charge (built-in users)\n\n- All other `named` licensed users are considered `inactive`\n\n- All `concurrent` licensed users are `existing` if a license exists\n\n**Note:** Built-in users such as `Admin`, `TermBrowser`, `TermTargetAccess`, `TermContribution`, `TermApiAccess`, and `AnalyticsReadOnlyUser`\nare included in the license statistics along with all other users, but they’re subject to the conditions above.\n\nThe following table describes the statistics attributes:\n\n| License type | Sum attribute | Description                   |\n|:-------------|---------------|-------------------------------|\n| `named`      | licensed      | Total number of licenses      |\n| `named`      | active        | Total active licenses         |\n| `named`      | inactive      | Total inactive licenses       |\n| `named`      | available     | Total available licenses (`licensed` minus `active`) |\n| `concurrent` | licensed      | Total number of licenses      |\n| `concurrent` | existing      | Total number of licenses used |\n\n**Note:**\n\n- Must have `UserAndRoles.editUser` privileges to perform this request\n\n- Concurrent license numbers may be seen (non-zero) if a license has been configured for both `named` and `concurrent` user limits",
                "tags": [
                    "Licenses API"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/roles/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": [
                                    {
                                        "id": "fdcd7fc6-9715-42f8-a947-88812bc02b2a",
                                        "name": "Term Browser User",
                                        "privileges": [
                                            "Terminology.read",
                                            "Dashboard.logon",
                                            "Termbrowser.logon"
                                        ],
                                        "default": false
                                    },
                                    {
                                        "id": "8c66c4e2-174a-4f77-b8d4-71bfa9ca4d2e",
                                        "name": "Author",
                                        "privileges": [
                                            "CheckingAndClients.checkingApplications",
                                            "CheckingAndClients.downloadReports"
                                        ],
                                        "default": true
                                    },
                                    {
                                        "id": "d66d4d00-3381-11e0-bc8e-0800200c9a66",
                                        "name": "Term Contributor",
                                        "privileges": [
                                            "TermContribution.contributeTerms",
                                            "TermContribution.commentTerms"
                                        ],
                                        "default": false
                                    },
                                    {
                                        "id": "6a0ebe93-f735-4b08-b6f2-66f7ecc70190",
                                        "name": "Term Browser Administrator",
                                        "privileges": [
                                            "Terminology.read",
                                            "Dashboard.logon"
                                        ],
                                        "default": false
                                    },
                                    {
                                        "id": "898a7c32-2c39-4cde-becb-16f22243e9b8",
                                        "name": "Analytics Read-Only User",
                                        "privileges": [
                                            "Reporting.read",
                                            "Dashboard.logon",
                                            "CheckingAndClients.downloadReports"
                                        ],
                                        "default": false
                                    },
                                    {
                                        "id": "bc5c91f3-fae1-49f7-8d60-d325077c6ef9",
                                        "name": "Super Administrator",
                                        "privileges": [
                                            "UserAndRoles.read",
                                            "Terminology.read",
                                            "LinguisticConfiguration.configureAndDeployRules",
                                            "LinguisticConfiguration.configureAndDeployReuse",
                                            "CheckingAndClients.submitDictionaryEntry",
                                            "CheckingAndClients.editPluginSegmentation",
                                            "CheckingAndClients.terminologyApplications",
                                            "TermContribution.contributeTerms",
                                            "Reporting.administration",
                                            "Servers.monitoring",
                                            "Terminology.export",
                                            "Terminology.edit",
                                            "CheckingAndClients.checkingApplications",
                                            "Terminology.undump",
                                            "Servers.editNotification",
                                            "CheckingAndClients.reuseApplications",
                                            "CheckingAndClients.runTermHarvesting",
                                            "TermContribution.commentTerms",
                                            "Servers.downloadSupportPackage",
                                            "LinguisticConfiguration.tuneResources",
                                            "LinguisticConfiguration.reloadLanguageConfiguration",
                                            "Terminology.customize",
                                            "Reporting.create",
                                            "LinguisticConfiguration.configureAndDeployTerminology",
                                            "Servers.overlay",
                                            "Terminology.dump",
                                            "UserAndRoles.setApiTokensForOthers",
                                            "Reporting.read",
                                            "CheckingAndClients.editCheckingProfiles",
                                            "Servers.readLicense",
                                            "TermContribution.removeCommentTerms",
                                            "ReuseManagement.edit",
                                            "Dashboard.logon",
                                            "UserAndRoles.editUser",
                                            "Servers.editLicense",
                                            "LinguisticConfiguration.editTargets",
                                            "Termbrowser.logon",
                                            "Servers.downloadLogs",
                                            "UserAndRoles.deleteSessions",
                                            "Terminology.import",
                                            "Servers.capture",
                                            "Servers.list",
                                            "CheckingAndClients.downloadReports",
                                            "Servers.restart",
                                            "Terminology.termbrowserAdmin",
                                            "ReuseManagement.read",
                                            "Terminology.statusChange",
                                            "CheckingAndClients.accessExtractedContent"
                                        ],
                                        "default": false
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get all roles",
                "operationId": "Get all roles",
                "description": "Returns a list of all roles including the associated privileges.",
                "tags": [
                    "Role API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/roles/privileges": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": [
                                    "CheckingAndClients.accessExtractedContent",
                                    "CheckingAndClients.checkingApplications",
                                    "CheckingAndClients.downloadReports",
                                    "CheckingAndClients.editCheckingProfiles",
                                    "CheckingAndClients.editPluginSegmentation",
                                    "CheckingAndClients.reuseApplications",
                                    "CheckingAndClients.runTermHarvesting",
                                    "CheckingAndClients.submitDictionaryEntry",
                                    "CheckingAndClients.terminologyApplications",
                                    "Dashboard.logon",
                                    "LinguisticConfiguration.configureAndDeployReuse",
                                    "LinguisticConfiguration.configureAndDeployRules",
                                    "LinguisticConfiguration.configureAndDeployTerminology",
                                    "LinguisticConfiguration.editTargets",
                                    "LinguisticConfiguration.reloadLanguageConfiguration",
                                    "LinguisticConfiguration.tuneResources",
                                    "Reporting.administration",
                                    "Reporting.create",
                                    "Reporting.read",
                                    "ReuseManagement.edit",
                                    "ReuseManagement.read",
                                    "Servers.capture",
                                    "Servers.downloadLogs",
                                    "Servers.downloadSupportPackage",
                                    "Servers.editLicense",
                                    "Servers.editNotification",
                                    "Servers.list",
                                    "Servers.monitoring",
                                    "Servers.overlay",
                                    "Servers.readLicense",
                                    "Servers.restart",
                                    "TermContribution.commentTerms",
                                    "TermContribution.contributeTerms",
                                    "TermContribution.removeCommentTerms",
                                    "Termbrowser.logon",
                                    "Terminology.customize",
                                    "Terminology.dump",
                                    "Terminology.edit",
                                    "Terminology.export",
                                    "Terminology.import",
                                    "Terminology.read",
                                    "Terminology.statusChange",
                                    "Terminology.termbrowserAdmin",
                                    "Terminology.undump",
                                    "UserAndRoles.deleteSessions",
                                    "UserAndRoles.editUser",
                                    "UserAndRoles.read",
                                    "UserAndRoles.setApiTokensForOthers"
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get all privileges",
                "operationId": "Get all privileges",
                "description": "Returns a list of all supported privileges.\n\n**Note:** In newer Acrolinx versions, we may introduce or remove privileges.\nTo find out which privileges come with your instance, submit this request and compare it to the example response.",
                "tags": [
                    "Role API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/roles": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "id": "f608876c-a943-4ad2-82c1-e59df943ce42",
                                    "name": "This is Default",
                                    "privileges": [
                                        "Dashboard.logon"
                                    ],
                                    "default": true
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the role"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "description": "Belonging privileges of the role",
                                            "items": {}
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create roles",
                "operationId": "Create roles",
                "description": "Adds new roles.\n\n**Note:**\n\n- The name needs to be unique and must be between 1 and 254 characters.\n\n- The name should not contain semicolons.\n\n- A role needs to have at least one privilege assigned.\n\n- You must reference existing privileges.",
                "tags": [
                    "Role API"
                ],
                "parameters": [
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the role"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "description": "Belonging privileges of the role"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "privileges"
                                    ],
                                    "example": {
                                        "name": "My new role",
                                        "privileges": [
                                            "Dashboard.logon"
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the role"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "description": "Belonging privileges of the role"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "privileges"
                                    ],
                                    "example": {
                                        "name": "This is Default",
                                        "privileges": [
                                            "Dashboard.logon"
                                        ],
                                        "default": true
                                    }
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/roles/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "id": "f608876c-a943-4ad2-82c1-e59df943ce41",
                                    "name": "ExampleRole",
                                    "privileges": [
                                        "Dashboard.logon"
                                    ],
                                    "default": false
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the role"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "description": "Belonging privileges of the role",
                                            "items": {}
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get a role",
                "operationId": "Get a role",
                "description": "Returns a role that Acrolinx identified by its *id* in the database.",
                "tags": [
                    "Role API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the role, unique identifier",
                        "required": true,
                        "x-example": "f608876c-a943-4ad2-82c1-e59df943ce41",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {},
                                "data": {
                                    "id": "f608876c-a943-4ad2-82c1-e59df943ce41",
                                    "name": "ExampleRole",
                                    "privileges": [
                                        "Dashboard.logon"
                                    ],
                                    "default": false
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "UUID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the role"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "description": "Belonging privileges of the role",
                                            "items": {}
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Update a role",
                "operationId": "Update a role",
                "description": "Updates a role that Acrolinx identified by its *id* in the database.\n\n**Note:**\n\n- To update roles, you need the privilege `UserAndRoles.editUser`.\n\n- You can't edit preconfigured roles!\n    - Acrolinx comes with a number of preconfigured roles that many customers use.\n\n- You can use one request to update role attributes individually or completely. The request will ignore missing attributes or attributes with `null` values.",
                "tags": [
                    "Role API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the role, unique identifier",
                        "required": true,
                        "x-example": "f608876c-a943-4ad2-82c1-e59df943ce41",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the role"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "description": "Belonging privileges of the role"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "privileges"
                                    ],
                                    "example": {
                                        "name": "Preferred name",
                                        "privileges": [
                                            "Dashboard.logon"
                                        ],
                                        "default": false
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "example": {
                                        "name": "Preferred name"
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "privileges": {
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "privileges"
                                    ],
                                    "example": {
                                        "privileges": [
                                            "Dashboard.logon",
                                            "UserAndRoles.read"
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "default": {
                                            "type": "boolean",
                                            "description": "Possible values are 'true' or 'false'"
                                        }
                                    },
                                    "required": [
                                        "default"
                                    ],
                                    "example": {
                                        "default": true
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "default": {
                                            "type": "boolean",
                                            "description": "Possible values are 'true' or 'false'"
                                        }
                                    },
                                    "required": [
                                        "default"
                                    ],
                                    "example": {
                                        "default": false
                                    }
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {},
                        "examples": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete a role",
                "operationId": "Delete a role",
                "description": "This method lets you delete a specified role based on its *id*.\n\n**Note:** You can only successfully delete a role if all of the following conditions are met:\n\n- The role isn't a preconfigured built-in role such as \"Author\", \"Super Administrator\", or \"Term Browser\".\n\n- The role isn't a default role.\n\n- The role isn't currently assigned to one or more users.",
                "tags": [
                    "Role API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the role, unique identifier",
                        "required": true,
                        "x-example": "f608876c-a943-4ad2-82c1-e59df943ce41",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        },
        "/api/v1/document/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "id": "283ab1e075f21a",
                                    "customFields": [
                                        {
                                            "displayName": "Project ID",
                                            "key": "projectId",
                                            "value": null,
                                            "required": true
                                        }
                                    ],
                                    "displayInfo": {
                                        "reference": "abc.md"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "null"
                                                    },
                                                    "required": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "displayInfo": {
                                            "type": "object",
                                            "properties": {
                                                "reference": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "id": "283ab1e075f21a",
                                    "customFields": [
                                        {
                                            "displayName": "Project ID",
                                            "key": "projectId",
                                            "value": null,
                                            "required": true
                                        }
                                    ],
                                    "displayInfo": {
                                        "reference": "abc.md"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get document",
                "operationId": "Get document",
                "description": "This method provides Document which was found in the database.",
                "tags": [
                    "Document API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "document id",
                        "required": true,
                        "x-example": "99576707-ed8c-44b6-82b8-c3ced8f349d1",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "id": "283ab1e075f21a",
                                    "reference": "C:\\abc.md",
                                    "contentType": "E-Mail",
                                    "customFields": [
                                        {
                                            "displayName": "Project ID",
                                            "key": "projectId",
                                            "value": "Marketing Campaign",
                                            "required": true
                                        }
                                    ],
                                    "displayInfo": {
                                        "reference": "abc.md"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "contentType": {
                                            "type": "string"
                                        },
                                        "customFields": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    },
                                                    "required": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "displayInfo": {
                                            "type": "object",
                                            "properties": {
                                                "reference": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "id": "283ab1e075f21a",
                                    "reference": "C:\\abc.md",
                                    "contentType": "E-Mail",
                                    "customFields": [
                                        {
                                            "displayName": "Project ID",
                                            "key": "projectId",
                                            "value": "Marketing Campaign",
                                            "required": true
                                        }
                                    ],
                                    "displayInfo": {
                                        "reference": "abc.md"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update custom document fields",
                "operationId": "Update custom document fields",
                "description": "",
                "tags": [
                    "Document API"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "custom document field id to update",
                        "required": true,
                        "x-example": "99576707-ed8c-44b6-82b8-c3ced8f349d1",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "reference": {
                                    "type": "string"
                                },
                                "contentType": {
                                    "type": "string"
                                },
                                "customFields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "displayInfo": {
                                    "type": "object",
                                    "properties": {
                                        "reference": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "reference": "C:\\abc.md",
                                "contentType": "E-Mail",
                                "customFields": [
                                    {
                                        "key": "projectId",
                                        "value": "Marketing Campaign"
                                    }
                                ],
                                "displayInfo": {
                                    "reference": "abc.md"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/api/v1/document/capabilities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {},
                                "links": {}
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                },
                "summary": "Document API capabilities",
                "operationId": "Document API capabilities",
                "description": "Use this method to discover the configuration and capabilities of the document API.\nAvailable information includes the configured document custom fields.",
                "tags": [
                    "Document API"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/monitoring": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "links": {
                                    "checkMetrics": "/api/v1/monitoring/checks",
                                    "healthMetrics": "/api/v1/monitoring/health"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "links": {
                                    "type": "object",
                                    "properties": {
                                        "checkMetrics": {
                                            "type": "string"
                                        },
                                        "healthMetrics": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "links": {
                                    "checkMetrics": "/api/v1/monitoring/checks",
                                    "healthMetrics": "/api/v1/monitoring/health"
                                }
                            }
                        }
                    }
                },
                "summary": "Get available metrics",
                "operationId": "Get available metrics",
                "description": "Lists available metrics according to the privileges of the API user. If access is granted a link to\nthe metrics resource will be added to the links hash. The following relations are currently available:\n\n|Key             | Target\n|----------------|-----------------\n|`checkMetrics`  |[check monitoring resource](#monitoring-api-get-check-metrics)\n|`healthMetrics` |[server health monitoring resource](#monitoring-api-get-health-metrics)",
                "tags": [
                    "Monitoring API"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/monitoring/checks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "receivedChecks": 54132,
                                    "successfulChecks": 54130,
                                    "failedChecks": 0,
                                    "unparseableDocuments": 2,
                                    "currentQueueLength": 0,
                                    "totalQueueTime": 1563
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "receivedChecks": {
                                            "type": "number",
                                            "description": "Total number of checks received"
                                        },
                                        "successfulChecks": {
                                            "type": "number",
                                            "description": "Total number of successful checks"
                                        },
                                        "failedChecks": {
                                            "type": "number"
                                        },
                                        "unparseableDocuments": {
                                            "type": "number",
                                            "description": "Total number of checks failed due to parsing errors"
                                        },
                                        "currentQueueLength": {
                                            "type": "number",
                                            "description": "Current number of waiting checks"
                                        },
                                        "totalQueueTime": {
                                            "type": "number",
                                            "description": "Total time checks spent waiting"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get check metrics",
                "operationId": "Get check metrics",
                "description": "Provides a summary of the checking activity of Acrolinx.\n\n|Field                    |Contents\n|-------------------------|-------------------\n|`receivedChecks`         |Total number of checks received by the platform.\n|`successfulChecks`       |Total number of completed checks that didn't result in an error.\n|`failedChecks`           |Total number of completed checks that resulted in an error.\n|`unparseableDocuments`   |Total number of checks that failed due to parsing errors.\n|`currentQueueLength`     |Current number of checks waiting for a free language server.\n|`totalQueueTime`         |Total time, in seconds, check requests waited for a free language server.",
                "tags": [
                    "Monitoring API"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/monitoring/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "data": {
                                    "languagesReady": {
                                        "en": true,
                                        "fr": true,
                                        "ja": false
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "languagesReady": {
                                            "type": "object",
                                            "properties": {
                                                "en": {
                                                    "type": "boolean"
                                                },
                                                "fr": {
                                                    "type": "boolean"
                                                },
                                                "ja": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "data": {
                                    "languagesReady": {
                                        "en": true,
                                        "fr": true,
                                        "ja": false
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get health metrics",
                "operationId": "Get health metrics",
                "description": "A general summary of the health of Acrolinx.\n\n|Field                    |Contents\n|-------------------------|-------------------\n|`languagesReady`         |A hash containing all configured languages as keys. If Acrolinx is ready to check in a language, its value will be true.",
                "tags": [
                    "Monitoring API"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/monitoring/health/status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get health status",
                "operationId": "Get health status",
                "description": "This method returns a successful response when at least one language server is available for checking.\nThis API response will only contain `200` response code. You don't need\nthe privilege \"Access to monitoring API\" to use this API.",
                "tags": [
                    "Monitoring API"
                ],
                "parameters": [],
                "consumes": []
            }
        },
        "/api/v1/monitoring/health/live": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "text/plain": "OK\n"
                        }
                    }
                },
                "summary": "Get health liveliness",
                "operationId": "Get health liveliness",
                "description": "This returns a successful response when Acrolinx can accept and process web requests.\nThis method doesn't tell you if Acrolinx is ready to process check requests. To get that information,\nyou can make an API call to `api/v1/monitoring/health/status`.\n\nThis API response will contain the plain-text message \"OK\" and a `200` response code. You don't need\nthe \"Access to monitoring API\" privilege to use this API. If a response is unsuccessful,\nyou'll see a response other than `200`.",
                "tags": [
                    "Monitoring API"
                ],
                "parameters": [],
                "produces": [
                    "text/plain"
                ],
                "consumes": []
            }
        },
        "/api/v1/reporting/data/checks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "checks": [
                                    {
                                        "checkId": "895ceca3-7a1c-390d-b8d6-02a53a54e0d5",
                                        "checkStartTime": "2023-11-14T21:32:22Z",
                                        "language": "ja",
                                        "scorecardUri": "api/v1/checking/scorecards/895ceca3-7a1c-390d-b8d6-02a53a54e0d5",
                                        "fileId": "8d1bb0a8-612e-30bc-8b6d-ea9fedba138c",
                                        "contentReference": "Ju-88",
                                        "filePath": "",
                                        "fileName": "Ju-88",
                                        "contentId": null,
                                        "acrolinxScore": 53,
                                        "acrolinxScoreColor": "yellow",
                                        "allIssues": 20,
                                        "words": 1851,
                                        "sentences": 100,
                                        "styleGuide": "Technical English",
                                        "styleGuideId": "3dd6bde9-a08b-4681-9e91-55b9ff4fc802",
                                        "contentGroupId": "66e82845-c22c-3997-93f5-d3cc1d9c2e5d",
                                        "contentGroup": "Connington of Griffin's Roost",
                                        "userId": "4564a62d-a947-3a61-88d4-5fdb89e281e1",
                                        "fullName": "abc fullname",
                                        "integration": "MS word",
                                        "integrationVersion": "v1",
                                        "contentProfile": "f5b8573c-e603-46d7-8af0-512d199d478b",
                                        "checkScope": "check",
                                        "checkType": "interactive",
                                        "customFields": {
                                            "role": "senior",
                                            "depArtment": "developers",
                                            "status": "draft"
                                        },
                                        "goals": [
                                            {
                                                "id": "CLARITY",
                                                "score": 34,
                                                "issues": 2
                                            },
                                            {
                                                "id": "CORRECTNESS",
                                                "score": 75,
                                                "issues": 9
                                            },
                                            {
                                                "id": "CONSISTENCY",
                                                "score": 83,
                                                "issues": 6
                                            },
                                            {
                                                "id": "INCLUSIVE",
                                                "score": 64,
                                                "issues": 0
                                            },
                                            {
                                                "id": "TONE",
                                                "score": 20,
                                                "issues": 9
                                            },
                                            {
                                                "id": "SCANNABILITY",
                                                "score": 23,
                                                "issues": 2
                                            },
                                            {
                                                "id": "TERMINOLOGY",
                                                "score": 72,
                                                "issues": 9
                                            }
                                        ],
                                        "metricScores": {}
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "checks": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 400,
                                "message": "You can only download 31 days of data at a time. Adjust the date range."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 400,
                                "message": "You can only download 31 days of data at a time. Adjust the date range."
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 403,
                                "message": "The Reporting API feature is inactive."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 403,
                                "message": "The Reporting API feature is inactive."
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 409,
                                "message": "No data is available for download. Try again later."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 409,
                                "message": "No data is available for download. Try again later."
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 429,
                                "message": "Download volume reached. The data will replenish at a rate of 5 days of data per day."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 429,
                                "message": "Download volume reached. The data will replenish at a rate of 5 days of data per day."
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 500,
                                "message": "Something went wrong. Try again or contact Acrolinx Support."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 500,
                                "message": "Something went wrong. Try again or contact Acrolinx Support."
                            }
                        }
                    }
                },
                "summary": "Get check data",
                "operationId": "Get check data",
                "description": "##### Download check data as a CSV file\n\nYou can access the data with cURL.\n\n**Note:** If no data is available, the CSV file will contain headers with zero rows of data. For example, data is only available if checks were run in the requested time range.\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/checks?start=<replace_start_date>&end=<replace_end_date>' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -o <replace_file_name>.csv\n```\n\n##### Download check data as a CSV file with only a subset of fields\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/checks?start=<replace_start_date>&end=<replace_end_date>&fields=Check%20ID%2CCheck%20start%20time%2CWords%2CAcrolinx%20Score' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -o <replace_file_name>.csv\n```\n\nThe downloaded data has only `Check ID`, `Check start time`, `Words` and `Acrolinx Score fields`.\n\n#####  Download check data as a JSON file\n\nYou can access the data with cURL. To download the data in JSON format, add the header \"Accept:application/json\" in a request.\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/checks?start=<replace_start_date>&end=<replace_end_date>' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -H \"Accept: application/json\"\n    -o <replace_file_name>.json\n```\n\n#####  Download check data as a JSON file with only a subset of fields\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/checks?start=<replace_start_date>&end=<replace_end_date>&fields=checkId%2CcheckStartTime%2Cwords%2CacrolinxScore\n' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -H \"Accept: application/json\"\n    -o <replace_file_name>.json\n```\n\nThe downloaded data has only `checkId`, `checkStartTime`, `words` and `acrolinxScore`.\n\n### CSV data structure for checks\n\n|Column name|Data type|Description|Length|\n|----------------|------------|------------|------------|\n|Check ID|string|Unique check ID|36|\n|Check start time|string|Start time of the check in UTC format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, for example, `2022-08-01T23:49:14.627Z`||\n|Language|string|Checking language|255|\n|Scorecard URI|string|Uniform Resource Identifier (URI) of the Scorecard|255|\n|File ID|string|Unique file ID|36|\n|Content reference|text|The first time you run a check, Acrolinx assigns the file a content reference. Acrolinx treats files with the same content reference as the same file.||\n|File path|string|The file's location when it’s first checked|255|\n|File name|string|Name of the file|255|\n|Content ID|string|Unique check ID for batch checks|255|\n|Acrolinx Score|number|Overall Acrolinx Score|255|\n|Acrolinx Score color|string|Color coding of the Acrolinx Score|255|\n|All issues|number|Count of all issues found||\n|Words|number|Number of words in the file||\n|Sentences|number|Number of sentences in the file||\n|Style guide|string|Name of the style guide used for checking|255|\n|Style guide ID|string|Unique style guide ID|36|\n|Content group ID|string|Unique content group ID|36|\n|Content group|string|Name of the content group|1024|\n|User ID|string|Unique user ID|36|\n|Full name|string|Full name of user|255|\n|Integration|string|Integration used to run the check|255|\n|Integration version|string|Integration version|255|\n|Content profile|string|Content profile used|255|\n|Check scope|string|Indicates whether a complete file or a specific selection of content is checked ['check'] or ['check selection'].|16|\n|Check type|string|Indicates the specific check method used to review the file [ \"batch\", \"interactive\", \"baseline\", \"automated\" ].|16|\n|Custom field {NAME}|string|Custom fields. The number of columns in the CSV file will correspond to the number of custom fields. For example, if there are 10 custom fields, the CSV file will have 10 columns for custom fields.|255|\n|{NAME} goal score|number|Score for a goal. The number of columns in the CSV file will correspond to the number of goal names. For example, if there are 10 goals, the CSV file will have 10 columns for goals.||\n|Clarity goal score|number|Score for the goal Clarity||\n|Consistency goal score|number|Score for the goal Consistency||\n|Inclusive language goal score|number|Score for the goal Inclusive language||\n|Scannability goal score|number|Score for the goal Scannability||\n|Spelling and grammar goal score|number|Score for the goal Spelling and grammar||\n|Terminology goal score|number|Score for the goal Terminology||\n|Tone goal score|number|Score for the goal Tone||\n|{NAME} goal issues|number|Number of issues found for the goal. The number of columns in the CSV file will correspond to the number of goal names. For example, if there are 10 goals, the CSV file will have 10 columns for goals.||\n|Clarity goal issues|number|Number of issues found for the goal Clarity||\n|Consistency goal issues|number|Number of issues found for the goal Consistency||\n|Inclusive language goal issues|number|Number of issues found for the goal Inclusive language||\n|Scannability goal issues|number|Number of issues found for the goal Scannability||\n|Spelling and grammar goal issues|number|Number of issues found for the goal Spelling and grammar||\n|Terminology goal issues|number|Number of issues found for the goal Terminology||\n|Tone goal issues|number|Number of issues found for the goal Tone||\n|{NAME} metric score|number|Metrics suffix by actual name. If there are 10 metrics, the CSV will have 10 columns for metrics suffixes by name of the metric||",
                "tags": [
                    "Reporting API"
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Date format `yyyy-MM-dd`. Download data starting from this date.",
                        "required": true,
                        "x-example": "2024-08-23",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Date format `yyyy-MM-dd`. Download data up to this date.",
                        "required": true,
                        "x-example": "2024-08-28",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "e.g. text/csv or application/json",
                        "required": false,
                        "x-example": "text/csv or application/json",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/api/v1/reporting/data/issues": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "issues": [
                                    {
                                        "checkId": "d800f541-f1b8-3df6-9a22-c565476b81c8",
                                        "context": "hello woorld",
                                        "issue": "woorld",
                                        "structuralContext": "sentence",
                                        "date": "2023-11-08",
                                        "goalId": "CORRECTNESS",
                                        "goalName": "Spelling and grammar",
                                        "guidelineId": "en_CORRECTNESS_Guideline_id-3",
                                        "guidelineName": "CORRECTNESS guideline id 3 display name",
                                        "language": "en",
                                        "issueType": "syntax",
                                        "term": null,
                                        "domainOrTermFilter": [],
                                        "termStatus": null
                                    },
                                    {
                                        "checkId": "d800f541-f1b8-3df6-9a22-c565476b81c8",
                                        "context": "Acrolinx supports",
                                        "issue": "Acrolinx",
                                        "structuralContext": "word",
                                        "date": "2023-11-08",
                                        "goalId": "WORDS_AND_PHRASES",
                                        "goalName": "Terminology",
                                        "guidelineId": "",
                                        "guidelineName": null,
                                        "language": null,
                                        "issueType": "terminology",
                                        "term": "Acrolinx",
                                        "domainOrTermFilter": [
                                            "PLAIN_ENGLISH",
                                            "undefined domain"
                                        ],
                                        "termStatus": "deprecated"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "issues": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 400,
                                "message": "You can only download 31 days of data at a time. Adjust the date range."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 400,
                                "message": "You can only download 31 days of data at a time. Adjust the date range."
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 403,
                                "message": "The Reporting API feature is inactive."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 403,
                                "message": "The Reporting API feature is inactive."
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 409,
                                "message": "No data is available for download. Try again later."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 409,
                                "message": "No data is available for download. Try again later."
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 429,
                                "message": "Download volume reached. The data will replenish at a rate of 5 days of data per day."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 429,
                                "message": "Download volume reached. The data will replenish at a rate of 5 days of data per day."
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 500,
                                "message": "Something went wrong. Try again or contact Acrolinx Support."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "code": 500,
                                "message": "Something went wrong. Try again or contact Acrolinx Support."
                            }
                        }
                    }
                },
                "summary": "Get issues data",
                "operationId": "Get issues data",
                "description": "##### Download issue data as a CSV file\n\nYou can access the data with cURL.\n\n**Note:** If no data is available, the CSV file will contain headers with zero rows of data. For example, data won't be available if no checks were run in the requested time range.\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/issues?start=<replace_start_date>&end=<replace_end_date>' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -o <replace_file_name>.csv\n```\n\n##### Download issue data as a CSV file with only a subset of fields\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/issues?start=<replace_start_date>&end=<replace_end_date>&fields=Check%20ID%2CDate%2CGuideline%20ID%2CGuideline%20name' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -o <replace_file_name>.csv\n```\n\nThis will download data only with the fields `Check ID`, `Date`, `Guideline ID` and`Guideline name`.\n\n#####  Download issue data as a JSON file\n\nYou can access the data with cURL. To download the data in JSON format, add the header \"Accept:application/json\" in a request.\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/issues?start=<replace_start_date>&end=<replace_end_date>' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -H \"Accept: application/json\"\n    -o <replace_file_name>.json\n```\n\n#####  Download issue data as a JSON file with only a subset of fields\n\nYou can access the data with cURL. To download the data in JSON format, add the header \"Accept:application/json\" in a request.\n\n```\ncurl \\\n    'https://<replace_your_host_address>/api/v1/reporting/data/issues?start=<replace_start_date>&end=<replace_end_date>&fields=checkId%2Cdate%2CguidelineId%2CguidelineName' \\\n    -H \"X-Acrolinx-Auth: <replace_your_access_token>\" \\\n    -H \"Accept: application/json\"\n    -o <replace_file_name>.json\n```\n\nThis will download data only with the fields `checkId`, `date`, `guidelineId` and`guidelineName`.\n\n### CSV data structure for issues\n\n|Column name|Data type|Description|Length|\n|----------------|------------|------------|------------|\n|Check ID|string|Unique check ID|36|\n|Date|string|Date when the issue was found. Shown in the format `yyyy-MM-dd`, for example, `2022-01-20`||\n|Context|string|Sentence or paragraph where the issue occurred|1024|\n|Issue|text|Content that Acrolinx highlighted||\n|Structural context|string|Structural location where the issue occurred in the file|1024|\n|Goal ID|string|ID of the goal|255|\n|Goal name|string|Name of the goal|255|\n|Guideline ID|string|Unique ID of the guideline|255|\n|Guideline name|string|Name of the guideline|255|\n|Language|string|Checking language|255|\n|Issue type|string|Type of issue|20|\n|Term|string|Actual word or phrase highlighted during the Acrolinx check|255|\n|Domain or Term filter|string|Internal category for the highlighted term|255|\n|Term status|string|How Acrolinx checked for the highlighted term [\"admitted\", \"deprecated\", \"preferred\"]. Read more about term statuses in the article [Term Settings](https://support.acrolinx.com/hc/en-us/articles/10228296536082-Term-Settings).|15|",
                "tags": [
                    "Reporting API"
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Date format `yyyy-MM-dd`. Download data starting from this date.",
                        "required": true,
                        "x-example": "2024-08-23",
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Date format `yyyy-MM-dd`. Download data up to this date.",
                        "required": true,
                        "x-example": "2024-08-28",
                        "type": "string"
                    },
                    {
                        "name": "X-Acrolinx-Auth",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "e.g. text/csv or application/json",
                        "required": false,
                        "x-example": "text/csv or application/json",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/requestSession": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "text/plain": "56429c06fbd5da74\n"
                        }
                    }
                },
                "summary": "Acquiring a Session",
                "operationId": "Acquiring a Session",
                "description": "Using the authentication token, the integration now needs to open a\nsession, specifying the session-type (always `TERMINOLOGY` for usage\nof the Terminology API) and the signature of the integration (see\nSignatures section further up).\n\nThe returned session token should be used in subsequent requests to\nthe Terminology API. It’s valid until the session is released by the\nintegration or by the Core Platform. As the license limits the number\nof concurrently opened sessions, an integration mustn’t forget to\nrelease a session before acquiring a new session token.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "authToken",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain"
                ],
                "consumes": []
            }
        },
        "/requestSession/{id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Releasing a Session",
                "operationId": "Releasing a Session",
                "description": "A session can be released by a `DELETE` on\n`/iq/services/v3/rest/core/releaseSession`, providing the session as\npath parameter.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "session ID",
                        "required": true,
                        "x-example": "56429c06fbd5da74z",
                        "type": "string"
                    },
                    {
                        "name": "authToken",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        },
        "/iq/services/v9/rest/terminology/entries/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.acrolinx.mtf+xml": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<mtf>\n    <conceptGrp>\n        <concept>13</concept>\n        <descripGrp>\n            <descrip type=\"ENTRY_UUID\">a918fccf-4a94-4398-b260-4d792289952c</descrip>\n        </descripGrp>\n        <transacGrp>\n            <transac type=\"origination\">admin</transac>\n            <date>2011-06-28T11:55:28+02:00</date>\n        </transacGrp>\n        <transacGrp>\n            <transac type=\"modification\">admin</transac>\n            <date>2014-02-03T11:00:04</date>\n        </transacGrp>\n        <languageGrp>\n            <language lang=\"EN\" type=\"English\"/>\n            <termGrp>\n                <term>return air</term>\n                <descripGrp>\n                    <descrip type=\"Status\">preferred</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">Technical_Names</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">120bdf01-4818-4a2c-bcea-4f875b6b129a</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695606</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T11:55:28+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">admin</transac>\n                    <date>2014-02-03T11:00:04</date>\n                </transacGrp>\n            </termGrp>\n        </languageGrp>\n        <languageGrp>\n            <language lang=\"NL\" type=\"Dutch\"/>\n            <termGrp>\n                <term>text nicht vorhanden</term>\n                <descripGrp>\n                    <descrip type=\"Status\">proposed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">680e0ea1-90f1-48ab-9ec9-5a362360692d</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695622</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T12:11:20+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">peter.bernds@acrolinx.com</transac>\n                    <date>2011-07-05T10:54:28+02:00</date>\n                </transacGrp>\n            </termGrp>\n        </languageGrp>\n        <languageGrp>\n            <language lang=\"ES\" type=\"Spanish\"/>\n            <termGrp>\n                <term>text nicht vorhanden</term>\n                <descripGrp>\n                    <descrip type=\"Status\">proposed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">01352af7-73e6-4024-9433-930846681b56</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695630</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T12:11:19+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">peter.bernds@acrolinx.com</transac>\n                    <date>2011-09-13T10:47:25+02:00</date>\n                </transacGrp>\n            </termGrp>\n        </languageGrp>\n        <languageGrp>\n            <language lang=\"DE\" type=\"German\"/>\n            <termGrp>\n                <term>Abluftmenge</term>\n                <descripGrp>\n                    <descrip type=\"Status\">proposed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">Technical_Names</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">44641d47-ddf3-4bb4-b1d4-a22a3fb42f64</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695646</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T11:55:28+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">admin</transac>\n                    <date>2014-02-03T10:59:47</date>\n                </transacGrp>\n            </termGrp>\n        </languageGrp>\n        <languageGrp>\n            <language lang=\"FR\" type=\"French\"/>\n            <termGrp>\n                <term>débit d'air repris</term>\n                <descripGrp>\n                    <descrip type=\"Status\">preferred</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">Technical_Names</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">5334a674-848b-44a3-8b42-1756d38717ef</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695614</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T11:55:28+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">admin</transac>\n                    <date>2014-02-03T10:59:54</date>\n                </transacGrp>\n            </termGrp>\n            <termGrp>\n                <term>débit d'évacuation</term>\n                <descripGrp>\n                    <descrip type=\"Status\">deprecated</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">Technical_Names</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">38e4ce12-4175-465e-a26f-4bb6d8a7ea15</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695654</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T11:55:28+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">admin</transac>\n                    <date>2014-02-03T10:59:58</date>\n                </transacGrp>\n            </termGrp>\n        </languageGrp>\n        <languageGrp>\n            <language lang=\"IT\" type=\"Italian\"/>\n            <termGrp>\n                <term>text nicht vorhanden</term>\n                <descripGrp>\n                    <descrip type=\"Status\">proposed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"domain\">undefined domain</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_UUID\">7958d666-8511-4c0e-aef1-d0f4748d2d46</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"TERM_ID\">1371197695638</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"term/frequency\">0</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Core\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"Part of Speech\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"gender\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"processStatus\">unprocessed</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"termType\">undefined</descrip>\n                </descripGrp>\n                <descripGrp>\n                    <descrip type=\"MORPHOSYNTACTIC_RESTRICTION\"/>\n                </descripGrp>\n                <transacGrp>\n                    <transac type=\"origination\">admin</transac>\n                    <date>2011-06-28T12:11:18+02:00</date>\n                </transacGrp>\n                <transacGrp>\n                    <transac type=\"modification\">admin</transac>\n                    <date>2011-08-30T11:55:38+02:00</date>\n                </transacGrp>\n            </termGrp>\n        </languageGrp>\n    </conceptGrp>\n</mtf>\n"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get by UUID or ID",
                "operationId": "Get by UUID or ID",
                "description": "Supported media types:\n\n- `application/vnd.acrolinx.actif+xml`: return entries as ACTIF in XML\n\n- `application/vnd.acrolinx.mtf+xml`: return entries as SDL MultiTerm XML\n\nRequired privilege:\n\n- Terminology View Terms\n\nThis functionality is provided by `GET` `/entries`. There are two variants of this operation:\n\n- asking for a single UUID or ID\n\n- asking for many UUIDs or IDs\n\nFor asking for only one entry simply append its UUID to the service\nURI. This works the same way for requesting multiple entries, just\npass a comma-separated list of IDs in the URL. The server determines\nby the format of the passed ID string whether it’s a UUID or an ID.\n\n**Note:** The length of the request URL is limited by any HTTP server\nimplementation. Based on our tests, we don't recommend exceeding the\nvalue of 4000 characters.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Either a single term entry ID or a comma-separated list of entry IDs.",
                        "required": true,
                        "x-example": "7bd1ee3f-8e46-4a1f-bd45-a3c18981f731",
                        "type": "string"
                    },
                    {
                        "name": "authToken",
                        "in": "header",
                        "description": "e.g. your_access_token",
                        "required": false,
                        "x-example": "your_access_token",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "e.g. application/vnd.acrolinx.mtf+xml",
                        "required": false,
                        "x-example": "application/vnd.acrolinx.mtf+xml",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.acrolinx.mtf+xml"
                ],
                "consumes": []
            },
            "delete": {
                "responses": {
                    "410": {
                        "description": "Gone",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete",
                "operationId": "Delete",
                "description": "Entire entries can be removed by calling DELETE on\n`/entries/{entryUUID}`. If an entry existed and could be deleted\nsuccessfully, the service returns 204 (No Content). Otherwise, if\nthere’s no entry under the specified UUID, the service returns 410\n(Gone).\n\nRequired Privilege\n\nTerminology - Edit Terms",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the UUID of the term to delete",
                        "required": true,
                        "x-example": "a918fccf-4a94-4398-b260-4d792289952c",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        },
        "/iq/services/v9/rest/terminology/entries": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object",
                            "properties": {},
                            "example": {}
                        }
                    }
                },
                "summary": "Create and update",
                "operationId": "Create and update",
                "description": "Entries and their terms can be created and updated by POSTing the\nrespective ACTIF or SDL MultiTerm XML representation to /entries.\nWhether an existing entry is updated or a new entry created crucially\ndepends on the entry UUID specified in the sent data. If the entry\nUUID references an existing entry in the database, all terms and\nfields of the entry will be replaced by the sent data. Specifically,\nif the sent entry data contains fewer terms than the existing entry in\nthe database, those terms missing from the sent entry data will be\ndeleted.\n\nOtherwise, that is, no entry of the same UUID exists, a new entry will\nbe created.\n\nSupported media types are:\n\n* application/vnd.acrolinx.actif+xml: ACTIF in XML\n\n* application/vnd.acrolinx.mtf+xml: SDL MultiTerm XML\n\nRequired privileges:\n\n* Terminology - Import terms (implies \"Edit terms\")\n\n* Terminology - Change the status of a term\n\nFor both creation and update, the return code is 201 (created) and the\n\"Location\" header gets the URL of the inserted/updated entry. If the\ninput data doesn't contain an entry that needs to be created or\nupdated, you'll see a 204 (no content). If the input data contains\nmore than one entry (which is allowed), all entries in the input data\nwill be created or updated respectively. However, the \"Location\"\nheader will only contain the URL of one of them.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/iq/services/v9/rest/terminology/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.acrolinx.actif+xml": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<actif xmlns=\"http://www.acrolinx.com\" version=\"1.0\">\n    <origin date=\"2025-03-10T14:06:11.978Z\">\n        <tool/>\n    </origin>\n    <schema>\n        <categories>\n            <category name=\"language\">\n                <item default=\"true\">en</item>\n                <item parent=\"en\">en-JP</item>\n                <item parent=\"en\">en-US</item>\n                <item parent=\"en\">en-GB</item>\n                <item>de</item>\n                <item>ja</item>\n                <item>zh</item>\n                <item parent=\"zh\">zh-CN</item>\n                <item parent=\"zh\">zh-TW</item>\n                <item>ar</item>\n                <item>fr</item>\n                <item>it</item>\n                <item>ko</item>\n                <item>ru</item>\n                <item>es</item>\n                <item>sv</item>\n                <item>mul</item>\n                <item>no</item>\n                <item>bg</item>\n                <item>cs</item>\n                <item>nl</item>\n                <item>pt</item>\n                <item>sprache</item>\n                <item parent=\"sprache\">sub1</item>\n                <item parent=\"sprache\">sub2</item>\n            </category>\n            <category name=\"boolean\">\n                <item>true</item>\n                <item default=\"true\">false</item>\n            </category>\n            <category name=\"lexical analysis mode\">\n                <item default=\"true\">string</item>\n                <item>base (analyzed)</item>\n            </category>\n            <category name=\"part of speech\">\n                <item>adjective</item>\n                <item>adverb</item>\n                <item>noun</item>\n                <item>other</item>\n                <item>proper noun</item>\n                <item default=\"true\">undefined</item>\n                <item>verb</item>\n            </category>\n            <category name=\"morphosyntactic restriction\">\n                <item default=\"true\">all</item>\n                <item>noun</item>\n                <item>verb</item>\n                <item>adjective</item>\n                <item>adverb</item>\n                <item>adposition</item>\n                <item>preposition</item>\n                <item>determiner</item>\n                <item>conjunction</item>\n                <item>pronoun</item>\n                <item>prefix</item>\n                <item>suffix</item>\n            </category>\n            <category name=\"domain\">\n                <item>New_Words</item>\n                <item>Plain_English</item>\n                <item>Smart Tech</item>\n                <item default=\"true\">undefined domain</item>\n                <item parent=\"undefined domain\">even more undefined</item>\n                <item>customer</item>\n                <item parent=\"customer\">ex customer</item>\n                <item>Special Symbols</item>\n                <item>Demo</item>\n                <item parent=\"Demo\">Switches</item>\n                <item parent=\"Demo\">Keitaidenwa</item>\n                <item parent=\"Demo\">KanaKanjiUsage</item>\n                <item parent=\"Demo\">ADSL</item>\n                <item parent=\"Demo\">MFP</item>\n                <item parent=\"Demo\">Drucker</item>\n                <item parent=\"Demo\">Acrolinx</item>\n                <item parent=\"Demo\">Standard_Terminology</item>\n                <item parent=\"Demo\">Routers</item>\n                <item parent=\"Routers\">Belkin</item>\n                <item parent=\"Routers\">D-Link</item>\n                <item parent=\"Routers\">Cisco</item>\n                <item parent=\"Demo\">Phone</item>\n                <item>ASD-STE100</item>\n                <item parent=\"ASD-STE100\">Technical_Names</item>\n                <item parent=\"Technical_Names\">TN_1_Official_Parts_Information</item>\n                <item parent=\"Technical_Names\">TN_2_Locations_On_Machines_Vehicles_Or_Equipment</item>\n                <item parent=\"Technical_Names\">TN_3_Tools_Or_Equipment</item>\n                <item parent=\"Technical_Names\">TN_4_Materials_Consumables_Or_Unwanted_Matter</item>\n                <item parent=\"Technical_Names\">TN_5_Facilities_And_Infrastructure</item>\n                <item parent=\"Technical_Names\">TN_6_Circuits_Or_Systems</item>\n                <item parent=\"Technical_Names\">TN_7_Mathematical_Scientific_Or_Engineering_Terms</item>\n                <item parent=\"Technical_Names\">TN_8_Navigation</item>\n                <item parent=\"Technical_Names\">TN_9_Numbers_Units_Of_Measurement_Or_Dial_Markings</item>\n                <item parent=\"Technical_Names\">TN_10_Quoted_Text</item>\n                <item parent=\"Technical_Names\">TN_11_Persons_Groups_Or_Bodies</item>\n                <item parent=\"Technical_Names\">TN_12_Body_Parts</item>\n                <item parent=\"Technical_Names\">TN_13_Common_Personal_Effects</item>\n                <item parent=\"Technical_Names\">TN_14_Medical_Terms</item>\n                <item parent=\"Technical_Names\">TN_15_Documents_Or_Manuals</item>\n                <item parent=\"Technical_Names\">TN_16_Names_Headings_And_Topics_In_Specifications</item>\n                <item parent=\"Technical_Names\">TN_17_Technical_Records_Standards_Specifications_Or_Regulations</item>\n                <item parent=\"Technical_Names\">TN_18_Environmental_Conditions</item>\n                <item parent=\"Technical_Names\">TN_19_Colors</item>\n                <item parent=\"Technical_Names\">TN_20_Damage_Terms</item>\n                <item parent=\"Technical_Names\">TN_Unclassified</item>\n                <item parent=\"ASD-STE100\">Technical_Verbs</item>\n                <item parent=\"Technical_Verbs\">TV_1_Manufacturing_Processes</item>\n                <item parent=\"Technical_Verbs\">TV_2_Computer_Processes_And_Applications</item>\n                <item parent=\"Technical_Verbs\">TV_3_Descriptions</item>\n                <item parent=\"Technical_Verbs\">TV_Unclassified</item>\n                <item>S1000D Bike Data Set</item>\n                <item>Dental Floss Tycoon</item>\n            </category>\n            <category name=\"status\">\n                <item default=\"true\">proposed</item>\n                <item parent=\"proposed\">proposed_from_search</item>\n                <item>deprecated</item>\n                <item>admitted</item>\n                <item>preferred</item>\n                <item>non-term</item>\n                <item parent=\"non-term\">stopword</item>\n                <item parent=\"non-term\">no-single-term</item>\n            </category>\n            <category name=\"weather\">\n                <item default=\"true\">undefined</item>\n                <item>wam</item>\n                <item>cold</item>\n                <item>sunny</item>\n                <item>cloudy</item>\n                <item>foggy</item>\n                <item>rainy</item>\n                <item>hot</item>\n            </category>\n            <category name=\"process status\">\n                <item default=\"true\">unprocessed</item>\n                <item>provisionally processed</item>\n                <item>finalized</item>\n                <item>review requested</item>\n            </category>\n            <category name=\"gender\">\n                <item default=\"true\">undefined</item>\n                <item>masculine</item>\n                <item>feminine</item>\n                <item>neuter</item>\n                <item>other</item>\n            </category>\n            <category name=\"term type\">\n                <item default=\"true\">undefined</item>\n                <item>full form</item>\n                <item>acronym</item>\n                <item>abbreviation</item>\n                <item>short form</item>\n                <item>variant</item>\n                <item>phrase</item>\n            </category>\n            <category name=\"color\">\n                <item default=\"true\">undefined</item>\n                <item>red</item>\n                <item parent=\"red\">light red</item>\n                <item parent=\"red\">dark red</item>\n                <item parent=\"red\">carmesin</item>\n                <item>green</item>\n                <item>blue</item>\n                <item>yellow</item>\n            </category>\n            <category name=\"emma\">\n                <item default=\"true\">undefined</item>\n            </category>\n        </categories>\n        <fields>\n            <entry-level>\n                <field data-type=\"text\" builtin=\"true\" name=\"entry/id\"/>\n                <field data-type=\"uuid\" builtin=\"true\" name=\"entry/uuid\"/>\n                <field data-type=\"image\" name=\"imageURL\"/>\n                <field data-type=\"html\" name=\"sourceOfDefinition\"/>\n                <field data-type=\"text\" name=\"definition\"/>\n                <field data-type=\"list\" set-valued=\"true\" category=\"weather\" name=\"weather\">\n                    <default-value>hot</default-value>\n                </field>\n                <field data-type=\"text\" name=\"subjectField\"/>\n                <field data-type=\"list\" set-valued=\"true\" category=\"color\" name=\"color_concept\">\n                    <default-value>blue</default-value>\n                </field>\n            </entry-level>\n            <term-level>\n                <field mandatory=\"true\" data-type=\"list\" category=\"status\" builtin=\"true\" name=\"term/status\">\n                    <default-value>proposed</default-value>\n                </field>\n                <field mandatory=\"true\" data-type=\"list\" set-valued=\"true\" category=\"domain\" builtin=\"true\" name=\"term/domain\">\n                    <default-value>undefined domain</default-value>\n                </field>\n                <field data-type=\"complex\" builtin=\"true\" name=\"term/msr\"/>\n                <field data-type=\"uuid\" builtin=\"true\" name=\"term/uuid\"/>\n                <field data-type=\"text\" builtin=\"true\" name=\"term/id\"/>\n                <field data-type=\"text\" builtin=\"true\" name=\"term/frequency\"/>\n                <field data-type=\"complex\" builtin=\"true\" name=\"term/variants-settings\"/>\n                <field data-type=\"dateTime\" builtin=\"true\" name=\"term/creation-date-time\"/>\n                <field data-type=\"text\" builtin=\"true\" name=\"term/creator-user-name\"/>\n                <field data-type=\"dateTime\" builtin=\"true\" name=\"term/last-modification-date-time\"/>\n                <field data-type=\"text\" builtin=\"true\" name=\"term/last-modifier\"/>\n                <field data-type=\"complex\" set-valued=\"true\" builtin=\"true\" name=\"term/event\"/>\n                <field data-type=\"text\" name=\"customer\"/>\n                <field data-type=\"text\" name=\"note\"/>\n                <field data-type=\"list\" category=\"process status\" name=\"processStatus\">\n                    <default-value>unprocessed</default-value>\n                </field>\n                <field data-type=\"list\" set-valued=\"true\" category=\"color\" name=\"color_ts\">\n                    <default-value>dark red</default-value>\n                </field>\n                <field data-type=\"list\" category=\"term type\" name=\"termType\">\n                    <default-value>undefined</default-value>\n                </field>\n                <field data-type=\"text\" name=\"sourceOfTerm\"/>\n                <field data-type=\"text\" name=\"emma\"/>\n                <field data-type=\"text\" name=\"assignedTo\"/>\n                <field data-type=\"html\" name=\"context\"/>\n                <field data-type=\"list\" category=\"gender\" name=\"gender\">\n                    <default-value>undefined</default-value>\n                </field>\n                <field data-type=\"text\" name=\"project\"/>\n                <field data-type=\"text\" name=\"crossReference\"/>\n                <field data-type=\"text\" name=\"externalCrossReference\"/>\n                <field data-type=\"text\" name=\"geographicalUsage\"/>\n                <field data-type=\"list\" category=\"part of speech\" name=\"partOfSpeech\">\n                    <default-value>undefined</default-value>\n                </field>\n            </term-level>\n        </fields>\n    </schema>\n</actif>\n"
                        }
                    }
                },
                "summary": "Get term base structure",
                "operationId": "Get term base structure",
                "description": "Retrieves the structure of the Acrolinx term base.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "e.g. application/vnd.acrolinx.actif+xml",
                        "required": false,
                        "x-example": "application/vnd.acrolinx.actif+xml",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.acrolinx.actif+xml"
                ],
                "consumes": []
            }
        },
        "/iq/services/v9/rest/terminology/filters": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "user": "admin",
                                "filters": [
                                    {
                                        "id": "Preferred Technical Names"
                                    },
                                    {
                                        "id": "SEO"
                                    },
                                    {
                                        "id": "Images"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "string"
                                },
                                "filters": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id"
                                        ]
                                    }
                                }
                            },
                            "example": {
                                "user": "admin",
                                "filters": [
                                    {
                                        "id": "Preferred Technical Names"
                                    },
                                    {
                                        "id": "SEO"
                                    },
                                    {
                                        "id": "Images"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Get available filters",
                "operationId": "Get available filters",
                "description": "Returns the ids/names of all filters for term search operations, that\nare available to the user in the current session. The filters can be\nreferenced by their `id` in a search API operation, described in the\nnext section.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "consumes": []
            }
        },
        "/iq/services/v9/rest/terminology/searchTerms": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "terms": [
                                    {
                                        "name": "debit d'air repris",
                                        "status": "preferred",
                                        "domains": [
                                            "Technical_Names",
                                            "undefined domain"
                                        ],
                                        "uuid": "5334a674-848b-44a3-8b42-1756d38717ef",
                                        "entry": {
                                            "uuid": "a918fccf-4a94-4398-b260-4d792289952c",
                                            "id": "13"
                                        }
                                    },
                                    {
                                        "name": "debit d'évacuation",
                                        "status": "deprecated",
                                        "domains": [
                                            "Technical_Names",
                                            "undefined domain"
                                        ],
                                        "uuid": "38e4ce12-4175-465e-a26f-4bb6d8a7ea15",
                                        "entry": {
                                            "uuid": "a918fccf-4a94-4398-b260-4d792289952c",
                                            "id": "13"
                                        }
                                    }
                                ],
                                "search": {
                                    "pagination": {
                                        "offset": 0,
                                        "limit": -1
                                    },
                                    "criteria": {
                                        "name": "d%",
                                        "language": "fr",
                                        "filter": null,
                                        "domains": [
                                            "undefined domain",
                                            "Technical Names"
                                        ]
                                    }
                                },
                                "totalResultCount": 2
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "type": "array",
                                    "items": {}
                                },
                                "search": {
                                    "type": "object",
                                    "properties": {
                                        "criteria": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "language": {
                                                    "type": "string"
                                                },
                                                "domains": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "filter": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "offset": {
                                                    "type": "number"
                                                },
                                                "limit": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "totalResultsCount": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "summary": "by criteria",
                "operationId": "by criteria",
                "description": "Terms can be searched by:\n\n* term `name`, supporting `%` as wildcard;\n\n* `language` id\n\n* `domains` an array of one or several domain names\n\n* `filter` id\n\n* or any combination of the above\n\nThe individual fields of the search criteria need to be \"escaped\" by\ntheir unicode positions in case they contain characters that would\notherwise break the JSON request string. For example, the\napostrophe/single quote character `'` is escaped as `\\u0027`.\n\nThe search API supports pagination to retrieve only a certain subset\nof the result set. The parameters are:\n\n* `offset`, the index of the first term to display (starting from 0,\nwhere the terms are always sorted ascending by their name)\n\n* `limit`, the maximal number of terms to return, starting from\noffset; if < 1, no limit is imposed.\n\nThe only supported media type for request as well as\nresult is application/json.\n\nThe search-terms service function requires a request object in the\nformat illustrated by the following example:\n\n```\n{\n    \"criteria\": {\n        \"name\": \"d\\\\u00e9bit%\",\n        \"language\": \"fr\",\n        \"domains\": [\"Technical Names\", \"Demo\"],\n        \"filter\": \"Preferred Technical Names\"\n    },\n    \"pagination\": {\n        \"offset\": 0,\n        \"limit\": -1\n    }\n}\n```\n\nThe `criteria` and `pagination` values are mandatory, as well as\n`offset` and `limit`, but you can leave out (or set to `null`) those\nfields of criteria that aren’t required by a specific query (for\ndomains you can also pass an empty array `[]`).\n\nThe criteria that exist in the search request are then combined by AND\n(if domains contains more than one value, they're combined into a\ndomain filter by OR-ing them) in the resulting filter.\n\nThe response is a JSON object with the following attributes:\n\n* `search` contains your search criteria and pagination settings; you\ncould reuse that object for subsequent calls with the same criteria\n\n* `totalResultCount` is the total number of hits for the search,\nbefore applying the pagination limit\n\n* `terms`: an array of term objects, each containing the attributes\n`name`, `status`, `domains`, `uuid` (the UUID of the term: use that\nUUID to identify the specific term data from the full entry that you\nretrieve by the entry UUID), `entry`; entry again is an object with\ntwo attributes uuid and id, the UUID, and ID of the entry. Using the\nentry UUID or ID you can then retrieve the entire entry via `GET\n/entries` (see above).\n\nIf there are no matching terms (or you request\nan offset greater than the result count), terms will be an empty\narray. If your search request refers to a nonexistent filter, the\nserver will respond with a 400 (Bad Request).",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SearchRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/iq/services/v9/rest/terminology/findTerms/{sessionId}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "text/plain": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<actif xmlns=\"http://www.acrolinx.com\" version=\"1.0\">\n    <origin date=\"2025-03-11T10:19:38.949Z\"><tool/></origin>\n    <data>\n        <source-languages><lang>en</lang></source-languages>\n        <entry>\n            <value field=\"subjectField\">undefined</value>\n            <value field=\"entry/id\">1307356662917</value>\n            <value field=\"entry/uuid\">ff61f9ce-9c23-4874-bb98-cc58456b8734</value>\n            <head>\n                <term>\n                    <name>2-Loch-Buchse</name>\n                    <language>de</language>\n                    <value field=\"term/status\">preferred</value>\n                    <value field=\"term/domain\">ADSL</value>\n                    <value field=\"term/uuid\">6c2b681c-0d2f-4820-9833-8b2d35ab6fe8</value>\n                    <value field=\"term/id\">22946</value>\n                    <value field=\"term/frequency\">0</value>\n                    <value field=\"term/creation-date-time\">2011-06-06T10:37:42.963Z</value>\n                    <value field=\"term/creator-user-name\">admin</value>\n                    <value field=\"term/last-modification-date-time\">2024-06-26T14:38:51.282Z</value>\n                    <value field=\"term/last-modifier\">peter.bernds@acrolinx.com</value>\n                    <value field=\"processStatus\">finalized</value>\n                    <value field=\"gender\">undefined</value>\n                    <value field=\"partOfSpeech\">undefined</value>\n                    <value field=\"termType\">undefined</value>\n                    <complex-value field=\"term/msr\">\n                        <attribute name=\"analysisMode\">base (analyzed)</attribute>\n                        <attribute name=\"token\">2-Loch-Buchse</attribute>\n                        <attribute name=\"occurrence\">1</attribute>\n                        <attribute name=\"mcat\">noun</attribute>\n                    </complex-value>\n                    <complex-value field=\"term/event\">\n                        <attribute name=\"user\">peter.bernds@acrolinx.com</attribute>\n                        <attribute name=\"date\">2024-06-25T13:51:47.671Z</attribute>\n                        <attribute name=\"type\">COMMENT</attribute>\n                        <attribute name=\"text\">Test</attribute>\n                    </complex-value>\n                </term>\n            </head>\n        </entry>\n    </data>\n</actif>\n"
                        }
                    }
                },
                "summary": "by criteria",
                "operationId": "by criteria",
                "description": "You can also search for terms using an older method called\n`findTerms,` which supports some search criteria that aren't available\nin the `searchTerms` method above, and which also returns the result\nin a specified target format, just like get entries described above.\n\nThe following search criteria are supported:\n\n* term `surface` (name), supporting `%` as wildcard\n\n* `language` id\n\n* `domain` - a single domain name\n\n* `entry` ID/UUID - an array of entry IDs or entry UUIDs\n\n* custom `criteria` - an array of `field=value` strings, where field\n  is one of the following ACTIF field names:\n  * `term/id`\n  * `term/uuid`\n  * `entry/id`\n  * `entry/uuid`\n  * `term/creation-date-time` (prepend with `<` or `>` to find terms\n    created before or after the given date)\n  * `term/last-modification-date-time` (prepend with `<` or `>` to\n    find terms modified before or after the given date)\n  * `term/creator-user-name`\n  * `term/last-modifier`\n  * any custom field name (as it appears in ACTIF)\n\nThe individual fields of the search criteria need to be \"escaped\" by\ntheir unicode positions in case they contain characters that would\notherwise break the JSON request string. For example, the\napostrophe/single quote character `'` is escaped as `\\u0027`.\n\nAll criteria are combined with AND when the term filter is\nconstructed. All criteria are optional; if you don’t give any\ncriteria, the result includes all terms.\n\nThe desired result format needs to be specified in the required format\nattribute of the request object (not in the Accept HTTP header). The\nsupported media types are the same as for the \"get entries\" method\nabove:\n\n* `application/vnd.acrolinx.actif+xml`: return terms as ACTIF in XML\n\n* `application/vnd.acrolinx.mtf+xml`: return terms as SDL MultiTerm XML\n\nFinally, you can optionally have the term base structure (schema)\nincluded in the response by setting the `withSchema` attribute to\ntrue.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "session ID\n\nThe current session ID",
                        "required": true,
                        "x-example": "56429c06fbd5da74z",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "surface": {
                                    "type": "string"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "domain": {
                                    "type": "string"
                                },
                                "entryId": {
                                    "type": "string"
                                },
                                "customCriteria": {
                                    "type": "array"
                                },
                                "format": {
                                    "type": "string"
                                },
                                "withSchema": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "format"
                            ],
                            "example": {
                                "surface": "",
                                "language": "",
                                "domain": "",
                                "entryId": "",
                                "customCriteria": [],
                                "format": "",
                                "withSchema": false
                            }
                        }
                    }
                ],
                "produces": [
                    "text/plain"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/iq/services/v9/rest/terminology/searchEntries": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "entries": [
                                    {
                                        "uuid": "a918fccf-4a94-4398-b260-4d792289952c",
                                        "id": "13"
                                    },
                                    {
                                        "uuid": "ee1c8221-5ac2-465a-bcb8-2f329ba0da8a",
                                        "id": "1391421694240"
                                    }
                                ],
                                "search": {
                                    "criteria": {
                                        "domains": [
                                            "undefined domain",
                                            "Technical_Names"
                                        ]
                                    }
                                },
                                "totalResultCount": 2
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "entries": {
                                    "type": "array",
                                    "items": {}
                                },
                                "search": {
                                    "type": "object",
                                    "properties": {
                                        "critera": {
                                            "type": "object",
                                            "properties": {
                                                "domains": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            }
                                        }
                                    }
                                },
                                "totalResultCount": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "summary": "Search entries",
                "operationId": "Search entries",
                "description": "You can retrieve all or only the entries (represented by their UUID\nand ID) of specific domains by using the searchEntries service\nendpoint. This service works similar to the \"search terms\" service,\nbut you can only specify a list of domains as search criterion, for\nexample:\n\n```\n{\n    \"criteria\": {\n        \"domains\": [\"Technical_Names\", \"Demo\"]\n    }\n}\n```\n\nPassing a nonempty array will get you all entries that contain at\nleast one term that is assigned to at least one of the specified\ndomains. Passing an empty array for domains will get you all entries.\n\nThe response is a JSON object with the following attributes:\n\n* `search` contains your search criteria\n\n* `totalResultCount` is the total number of entries matching the\n  criterion\n\n* `entries`: an array of entries, each containing the attributes `id`,\n  and `uuid`. Using the entry UUID or ID you can then retrieve the\n  entire entry via `GET /entries` (see above).",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SearchEntriesRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/iq/services/v9/rest/terminology/deployTerminology": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Deployment of Terminology",
                "operationId": "Deployment of Terminology",
                "description": "After terms and entries have been created or updated using the above\nmethod, they're not immediately available for checking. To make the\nnew or updated terms available for checking, the terminology needs to\nbe \"deployed\". Currently, triggering a \"deploy\" of the terminology\njust causes all running language servers to reload their language\nconfiguration, which includes the loading of the terminology. Please\nnote that a language becomes unavailable for checking for a certain\namount of time up to several minutes. Therefore terminology\ndeployments should be scheduled for convenient times and not just done\nafter each term or entry update.\n\nYou only need to (re)deploy terms/entries in domains and languages the\nlanguage configuration uses for checking. For instance, when you've\nupdated only the Arabic translation of a term, and there's no language\nserver running for Arabic, a \"deploy\" isn’t necessary.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [],
                "consumes": []
            }
        },
        "/iq/services/v9/rest/terminology/media/{filename}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        },
                        "examples": {}
                    }
                },
                "summary": "Upload",
                "operationId": "Upload",
                "description": "A multimedia object can be uploaded to the Core Platform specifying a\nunique file name. We recommend using a scheme based on newly generated\nUUIDs plus a readable part and the file extension. If an existing\nfilename is used, the old one will be replaced.\n\nTo transfer a media file to the Core Platform the term API service,\ncall POST on /media/{finaName}.\n\nSupported media types are:\n\nimage/*: all images types, for example, image/png, image/gif, etc.\napplication/pdf\nRequired privileges:\n\nTerminology - Import terms (implies \"Edit terms\")\nReturn codes:\n\n201 (Created) in the case of success. The Location header contains the URL of the uploaded content.\n404 (Not Found) if the filename contains a /.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "The filename to upload",
                        "required": true,
                        "x-example": "document.pdf",
                        "type": "string"
                    }
                ],
                "consumes": []
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Download",
                "operationId": "Download",
                "description": "A multimedia object that has been uploaded through this API can be\ndownloaded using the unique filename. To achieve this, call GET on\n/media/{filename}.\n\nRequired privileges:\n\nTerminology - Export terms (implies \"Read terms\")\nReturn codes:\n\nIn case of success, 200 (OK) and the response body contains the media file.\n404 (Not Found) if the filename doesn't exist.",
                "tags": [
                    "Terminology API v9"
                ],
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "The filename to download",
                        "required": true,
                        "x-example": "document.pdf",
                        "type": "string"
                    }
                ],
                "consumes": []
            }
        }
    },
    "definitions": {
        "Index": {},
        "Capabilities": {},
        "Request or validate an API token": {},
        "Poll for a new API token": {},
        "List checking capabilities": {},
        "Submit a check": {},
        "Check result": {},
        "User resource": {},
        "Missing required user custom fields": {},
        "User-generated API tokens": {},
        "Random passwords": {},
        "User commands": {},
        "User bulk operations": {},
        "Custom fields": {},
        "Statistics": {},
        "Roles": {},
        "Privileges": {},
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "UUID"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the role"
                },
                "privileges": {
                    "type": "array",
                    "items": {},
                    "description": "Belonging privileges of the role"
                },
                "default": {
                    "type": "boolean",
                    "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                }
            }
        },
        "Document": {},
        "Get available metrics": {},
        "Get check metrics": {},
        "Get health metrics": {},
        "Get health status": {},
        "Get health liveliness": {},
        "CreateOrUpdateRole": {
            "type": "object",
            "required": [
                "name",
                "privileges"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role"
                },
                "privileges": {
                    "type": "array",
                    "items": {},
                    "description": "Belonging privileges of the role"
                },
                "default": {
                    "type": "boolean",
                    "description": "Indicates that the role is assigned to new users by default [ true | false ]"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "UUID"
                },
                "username": {
                    "type": "string",
                    "description": "The username"
                },
                "fullName": {
                    "type": "string",
                    "description": "The full name of the user"
                },
                "createdOn": {
                    "type": "string",
                    "description": "The ISO8601 timestamp indicating when the user was created"
                },
                "lastIntegrationAccess": {
                    "type": "string",
                    "description": "The ISO8601 timestamp indicating when the last integration access occurred"
                },
                "licenseType": {
                    "type": "string",
                    "description": "Indicates the type of license as one of ['named' | 'concurrent' | 'builtin']"
                },
                "licenseStatus": {
                    "type": "string",
                    "description": "The license status"
                },
                "activeTokenId": {
                    "type": "string",
                    "description": "Displays the currently active API token's id or an empty string if there’s no active token"
                },
                "checkingFrequency": {
                    "$ref": "#/definitions/UserStatus",
                    "description": "Gives a rough idea of the pattern of checking frequency across a user's lifetime in days"
                },
                "properties": {
                    "type": "object",
                    "properties": {},
                    "description": "Key/Value pair of properties"
                },
                "roles": {
                    "type": "array",
                    "items": {},
                    "description": "List of assigned roles"
                },
                "idpUser": {
                    "type": "boolean",
                    "description": "Indicates whether the user has any linked identity providers"
                },
                "staffUser": {
                    "type": "boolean",
                    "description": "Indicates whether the user is an Acrolinx staff member"
                },
                "rolesSetByIdp": {
                    "type": "boolean",
                    "description": "Indicates whether the user has their roles managed by their identity provider"
                },
                "customFields": {
                    "type": "array",
                    "items": {},
                    "description": "List of custom fields"
                }
            }
        },
        "UserStatus": {
            "type": "string",
            "enum": [
                "frequent",
                "infrequent",
                "regular"
            ]
        },
        "CreateUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "The unique username, maximum length 255 characters"
                },
                "fullName": {
                    "type": "string",
                    "description": "The full name of the user, maximum length 255 characters (optional)"
                },
                "password": {
                    "type": "string",
                    "description": "The user password, length between 1 and 128 characters (optional)"
                },
                "licenseType": {
                    "type": "string",
                    "description": "Indicates the type of license as one of ['named' | 'concurrent'] (optional)"
                },
                "roles": {
                    "type": "array",
                    "items": {},
                    "description": "List of assignable roles (optional)"
                }
            }
        },
        "CustomField": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The unique key of the custom field"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name to be displayed"
                },
                "inputType": {
                    "type": "string",
                    "description": "Indicates the origin of the field ['required' | 'optional' | 'externallyProvided']"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the type ['list' | 'text']"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the field"
                },
                "possibleValues": {
                    "type": "array",
                    "items": {},
                    "description": "List of possible valid values"
                }
            }
        },
        "UserApiTokenCreateResponse": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "example": "\"api\""
                },
                "issuedAt": {
                    "type": "string",
                    "description": "The ISO8601 timestamp indicating when the token was issued"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The ISO8601 timestamp indicating when the token will expire"
                },
                "token": {
                    "type": "string",
                    "description": "The generated API token (JWT)"
                }
            }
        },
        "BulkCreateUser": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {},
                    "description": "List of users to be created"
                }
            }
        },
        "BulkResult": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "number",
                    "description": "The resulting HTTP success code of the operation performed on the object"
                },
                "id": {
                    "type": "string",
                    "description": "The generated UUID of the object"
                },
                "location": {
                    "type": "string",
                    "description": "The href location of the affected object"
                }
            }
        },
        "BulkError": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "number",
                    "description": "The resulting HTTP error code of the operation performed on the object"
                },
                "id": {
                    "type": "string",
                    "description": "An associated unique identifier of the object involved in the error"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the type of the error ['client' | 'server']"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the error message"
                },
                "detail": {
                    "type": "string",
                    "description": "More details on the actual error and the potential cause"
                },
                "reference": {
                    "type": "string",
                    "description": "UUID for internal error logging reference"
                }
            }
        },
        "BulkResultResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {}
                },
                "errors": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "LicenseStatistics": {
            "type": "object",
            "properties": {
                "named": {
                    "$ref": "#/definitions/Named"
                },
                "concurrent": {
                    "$ref": "#/definitions/Concurrent"
                }
            }
        },
        "Named": {
            "type": "object",
            "properties": {
                "licensed": {
                    "type": "number",
                    "description": "The total number of named licenses available"
                },
                "active": {
                    "type": "number",
                    "description": "The number of active named users"
                },
                "inactive": {
                    "type": "number",
                    "description": "The number of inactive named users"
                },
                "available": {
                    "type": "number",
                    "description": "The number of available licenses (licensed - active)"
                }
            }
        },
        "Concurrent": {
            "type": "object",
            "properties": {
                "licensed": {
                    "type": "number",
                    "description": "The total number of concurrent licenses available"
                },
                "existing": {
                    "type": "number",
                    "description": "The number of concurrent licenses used"
                }
            }
        },
        "Pagination": {
            "type": "object",
            "properties": {
                "prev": {
                    "type": "string",
                    "description": "URI of the previous page"
                },
                "next": {
                    "type": "string",
                    "description": "URI of the next page"
                },
                "first": {
                    "type": "string",
                    "description": "URI of the first page"
                },
                "last": {
                    "type": "string",
                    "description": "URI of the last page"
                }
            }
        },
        "RandomPassword": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "a random, policy-compliant password"
                }
            }
        },
        "FindTermsRequest": {
            "type": "object",
            "required": [
                "format"
            ],
            "properties": {
                "surface": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "entryId": {
                    "type": "string"
                },
                "customCriteria": {
                    "type": "array",
                    "items": {}
                },
                "format": {
                    "type": "string"
                },
                "withSchema": {
                    "type": "boolean"
                }
            }
        },
        "SearchEntriesRequest": {
            "type": "object",
            "properties": {
                "critera": {
                    "$ref": "#/definitions/SearchEntriesCriteria"
                }
            }
        },
        "SearchEntriesCriteria": {
            "type": "object",
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "SearchEntriesResult": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {}
                },
                "search": {
                    "$ref": "#/definitions/SearchEntriesRequest"
                },
                "totalResultCount": {
                    "type": "number"
                }
            }
        },
        "SearchEntryResult": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "SearchRequest": {
            "type": "object",
            "properties": {
                "criteria": {
                    "$ref": "#/definitions/SearchRequestCriteria"
                },
                "pagination": {
                    "$ref": "#/definitions/SearchRequestPagination"
                }
            }
        },
        "SearchRequestCriteria": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {}
                },
                "filter": {
                    "type": "string"
                }
            }
        },
        "SearchRequestPagination": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "number"
                },
                "limit": {
                    "type": "number"
                }
            }
        },
        "SearchResult": {
            "type": "object",
            "properties": {
                "terms": {
                    "type": "array",
                    "items": {}
                },
                "search": {
                    "$ref": "#/definitions/SearchRequest"
                },
                "totalResultsCount": {
                    "type": "number"
                }
            }
        },
        "Term": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "Get check data": {},
        "Get issues data": {},
        "Authentication and Authorization": {},
        "Term entries": {},
        "Editing term entries": {},
        "Schema": {},
        "Filters": {},
        "Search terms": {},
        "Find terms": {},
        "Media files": {}
    },
    "securityDefinitions": {},
    "tags": [
        {
            "name": "Index"
        },
        {
            "name": "Authentication API",
            "description": "Authentication works with either a configured access token, with single sign-on (SSO), or interactively with the Acrolinx sign-in web page.\nEmbedded integrations use either the configured access token or SSO.\nInteractive integrations with a human user use SSO or the interactive process."
        },
        {
            "name": "Checking API",
            "description": "The API for checking documents."
        },
        {
            "name": "User API",
            "description": "In the User API, Acrolinx defines a user as an entity that has the following:\n\n* An id\n\n* A username\n\n* A fullName\n\n* Custom properties (set by the integration).\n\nYou're _required_ to provide user information for the following:\n\n* Interactive integrations: When you sign in to the Sidebar, you enter your user information. This creates an access token for the signed-in user.\n\n* Embedded (CMS) integrations (that use an API token): When you sign in to Acrolinx, you need to enter your custom user information. Use this API to generate an API token for the user that’s signed in.\n\nSecurity:\n\n* A user can read and update their own data.\n\n* Only users with sufficient privileges (admin, for example) can read or update other users' data.\n\n**Note:** Before you get started with the User API, review the [authentication and authorization](https://acrolinxapi.docs.apiary.io/#introduction/authentication-and-authorization) requirements."
        },
        {
            "name": "Custom fields API",
            "description": "Use the API to set and view user custom fields.\n\n**Note:** You only need a valid access token for this request (no special privileges needed)."
        },
        {
            "name": "Licenses API",
            "description": "The following set of APIs provides license information."
        },
        {
            "name": "Role API",
            "description": "In the Role API, a role is an entity that has an id, a name and list of privileges, and information about whether this role is a default role.\nYou can use roles to group sets of privileges and assign them to different users.\nMark roles as default if you want to automatically assign at least one default role to all new users.\n\nTo read more about role-based access control in Acrolinx, see [User Roles](https://support.acrolinx.com/hc/en-us/articles/10210994316562-User-Roles).\n\n**Note:** Before you start using the Role API, review the [authentication and authorization](https://acrolinxapi.docs.apiary.io/#introduction/authentication-and-authorization) requirements."
        },
        {
            "name": "Document API",
            "description": "A document is an entity that associates names and characteristics that identify a document with an ID. It also contains the custom document information.\n\nTypical program flow:\n\n1. A user opens a document in an editor.\n\n2. The integration uses create or retrieve document information to check if the user has to fill out the custom fields.\n    If the user has to fill out custom fields, the API returns all fields to fill out and the set values.\n\n3. The integration requests the user to fill out the custom fields.\n\n4. The integration sets the new custom fields either using the update document function or while submitting a check request."
        },
        {
            "name": "Monitoring API",
            "description": "The resources in this group provide information about the health and performance of Acrolinx.\nAccessing this information requires the privilege \"Access to monitoring API.\" Not all users have this privilege. \nMake sure the user associated with your API token has the relevant privileges.\n\nTo quickly check your privileges, see if the [metrics index](#monitoring-api-get-available-metrics)\ncontains links. Read more about privilege management in the\n[Acrolinx documentation](https://support.acrolinx.com/hc/en-us/sections/10210965582994-User-Management)."
        },
        {
            "name": "Reporting API",
            "description": "The reporting API provides direct access to raw check data and raw issue data.\nYou can download the data in CSV or JSON format and add it to your preferred analysis tool.\n\n### Restrictions\n\n#### Available data\n\nDefault: 12 months\n\nYou can download data from the past 12 months by default. Contact Acrolinx Support for more information.\n\n#### Time limit\n\nYou can only download 31 days of data per request.\n\n#### Concurrent requests\n\nDefault: 3 requests per tenant\n\nThis limits the number of concurrent downloads. The default is 3 concurrent downloads.\nIf you exceed the quota, you'll get a 429 status code. The response will include the headers Retry-After, RateLimit-Limit, and RateLimit-Remaining.\n\n#### Download volume\n\nDefault: 1000 days of raw check data and 1000 days of raw issue data. The data will replenish at a rate of 5 days of data per day.\n\nIf you download any amount of data for a specific day, that day counts toward the default. This includes empty days. The 1000-day default is designed to give you access to all available historic data.\n\nThe quota is set for each type of data. For example, when you download check data it won't affect the amount of issue data you can download.\n\nIf you exceed the download quota, you'll get a 429 status code. The response will include the headers Retry-After, RateLimit-Limit, RateLimit-Remaining, and RateLimit-Reset.\n\n#### Date time format\n\nThe date time is in UTC format.\n\n**Note:** To access the Reporting API, you'll need to be authorized and authenticated with an access token. Before you get started with the Reporting API, review the [authentication and authorization](https://acrolinxapi.docs.apiary.io/#introduction/authentication-and-authorization) requirements."
        },
        {
            "name": "Terminology API v9",
            "description": "## Deprecation Note\n\n**Warning:** Communication using the SDL *MultiTerm XML* format is\ndeprecated. While it still works today, support can be removed at any\ntime.\n\n## Configuration\n\nBefore invoking one of the Terminology API services for the SDL\nMultiTerm result format, the Core Platform must be configured\ncorrectly. This includes that there are XSL transformations from ACTIF\nformat to SDL MultiTerm XML and SDL MultiTerm Definition XDT. The\nneeded XSL style sheets will be available as part of the Core Platform\nresources.\n\nThe availability of those resources can be checked in the Acrolinx\ndashboard on `Style -> Term import and Export -> Custom File Format`.\n\n## Media/Content Types\n\nExcept for application-specific XML data (ACTIF resp. SDL MultiTerm\nXML/XDT data), request, and response data is usually either plain text\nor in JSON format. The encoding is usually assumed to be UTF-8.\n\nWith some service methods, you can control the format of the return\nvalues by means of the standard HTTP `Accept` header.\n\nService methods that accept application-specific body data rely on the\ncorrect setting of the standard HTTP `Content-Type` header.\n\nThe supported media types are listed where applicable."
        }
    ]
}